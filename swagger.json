{
	"swagger": "2.0",
	"info": {
		"title": "GFF Backend API",
		"description": "",
		"version": "1.0"
	},
	"schemes": ["http", "https"],
	"host": "localhost:3000",
	"basePath": "/",
	"tags": [
		{
			"name": "auth",
			"description": "Authentication related routes"
		},
		{
			"name": "user",
			"description": "App users related routes"
		},
		{
			"name": "transaction-account",
			"description": "Transaction-Account related routes"
		},
		{
			"name": "transaction",
			"description": "Transaction related routes"
		},
		{
			"name": "transaction-category",
			"description": "Transaction-Category related routes"
		},
		{
			"name": "record",
			"description": "Record related routes"
		},
		{
			"name": "hashtag",
			"description": "Hashtags related routes"
		},
		{
			"name": "debt",
			"description": "Debt related routes"
		},
		{
			"name": "user-information",
			"description": "User information related routes"
		},
		{
			"name": "mentor-matcher",
			"description": "Mentor matcher related routes"
		},
		{
			"name": "mentor-information",
			"description": "Mentor information related routes"
		}
	],
	"paths": {
		"/mentor-information": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get mentor informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "mentor_id",
						"in": "query",
						"description": "Mentor id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			},
			"post": {
				"tags": ["mentor-information"],
				"description": "Get mentor informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Mentor information",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CreateOrUpdateMentorInformation"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			},
			"put": {
				"tags": ["mentor-information"],
				"description": "Get mentor informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"description": "Mentor information",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CreateOrUpdateMentorInformation"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			}
		},
		"/mentor-matcher/my-mentor": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get logged in user's mentor",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentors",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/my-mentee": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get logged in user's mentee",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/mentors": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Search mentors",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": false,
						"type": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "Mentor name",
						"required": true,
						"type": "string"
					},
					{
						"name": "industry",
						"in": "query",
						"description": "Industry(comma separated value with no spaces, e.g. IT,Software)",
						"required": false
					},
					{
						"name": "role",
						"in": "query",
						"description": "Role(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					},
					{
						"name": "frequency",
						"in": "query",
						"description": "Frequency(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					},
					{
						"name": "conversation_mode",
						"in": "query",
						"description": "Conversation Mode(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentors"
					}
				}
			}
		},
		"/mentor-matcher/request/send": {
			"post": {
				"tags": ["mentor-matcher"],
				"description": "Send mentor requests",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CreateMentorRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/mentor/favorite/add": {
			"post": {
				"tags": ["mentor-matcher"],
				"description": "Add a Mentor favorite",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/FavoriteOrUnfavoriteMentor"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/mentor/favorite/remove": {
			"post": {
				"tags": ["mentor-matcher"],
				"description": "Remove a Mentor from the favorite list",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/FavoriteOrUnfavoriteMentor"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/request/accept": {
			"put": {
				"tags": ["mentor-matcher"],
				"description": "Accept mentor request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/AcceptOrRejectMentorRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/request/reject": {
			"put": {
				"tags": ["mentor-matcher"],
				"description": "Reject mentor request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/AcceptOrRejectMentorRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/sign-contract": {
			"put": {
				"tags": ["mentor-matcher"],
				"description": "Sign mentor contract.",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/MentorContract"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/request/mentee": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get sent mentors requests [for metee users]",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/request/mentor": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get mentors requests [for mentor users]",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/debt/delete/{id}": {
			"delete": {
				"tags": ["debt"],
				"description": "Delete a debt",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"debt\":1}"
							}
						}
					}
				}
			}
		},
		"/debt/{id}": {
			"get": {
				"tags": ["debt"],
				"description": "Get debt by id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\": 2,\"amount\":500,\"due_date\":\"2022-05-05\",\"user_id\":17}]"
							}
						}
					}
				}
			}
		},
		"/hashtag/add": {
			"post": {
				"tags": ["hashtag"],
				"description": "Add new hashtag",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/hashtag_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"hashtag_name\": \" testni hashtag\",\n    \"user_information_id\": 2\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"hashtag\":{\"id\":7,\"hashtag_name\":\"#testnihashtag\",\"user_information_id\":2}}"
							}
						}
					}
				}
			}
		},
		"/userInformation/add": {
			"post": {
				"tags": ["user-information"],
				"description": "Add additional user information",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/userInformation_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"user_id\": 37,\n    \"profile_url\": null,\n    \"bio\": \"Test my bio\",\n    \"date_of_birth\": \"2022-05-31\",\n    \"gender\": \"male\",\n    \"email\": \"email\",\n    \"phone_number\": \"+55555555555\",\n    \"country\": \"test country\",\n    \"city\": \"test city\",\n    \"state\": \"test state\",\n    \"zip_code\": 10000,\n    \"address\": \"Test my address \",\n    \"twitter\": \"frfrfrfrfrf\",\n    \"facebook\": null,\n    \"instagram\": null,\n    \"linkedin\": null,\n    \"tiktok\": null,\n    \"employer_name\": \"Test employer\",\n    \"job_role\": \"CEO\",\n    \"education\": \"No education\",\n    \"other_education\": \"No test education\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"id\":7,\"user_id\":37,\"bio\":\"Test my bio\",\"date_of_birth\":\"2022-05-31T00:00:00.000Z\",\"gender\":\"male\",\"email\":\"email\",\"phone_number\":\"+55555555555\",\"country\":\"test country\",\"city\":\"test city\",\"state\":\"test state\",\"zip_code\":10000,\"address\":\"Test my address \",\"twitter\":\"frfrfrfrfrf\",\"employer_name\":\"Test employer\",\"job_role\":\"CEO\",\"education\":\"No education\",\"other_education\":\"No test education\"}"
							}
						}
					}
				}
			}
		},
		"/debt/": {
			"get": {
				"tags": ["debt"],
				"description": "Lists all debts",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{ \"id\": 1,\"amount\": 300,\"due_date\": \"2022-07-07\",\"user_id\": 17},{\"id\": 2,\"amount\": 500,\"due_date\": \"2022-05-05\",\"user_id\": 17},{\"id\": 4,\"amount\": 100,\"due_date\": \"2022-08-05\",\"user_id\": 16}]"
							}
						}
					}
				}
			}
		},
		"/hashtag/update/{id}": {
			"put": {
				"tags": ["hashtag"],
				"description": "Update hashtag",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Hashtag ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_2"
							},
							"examples": {
								"0": {
									"value": "{\n            \"hashtag_name\": \"#hashtagagain\",\n            \"user_information_id\": 1\n        }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"hashtag\":1}"
							}
						}
					}
				}
			}
		},
		"/hashtag/list": {
			"get": {
				"tags": ["hashtag"],
				"description": "Lists all hashtags",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "hashtags:\n  - id: 1\n    hashtag_name: '#test'\n    user_information_id: 1\n  - id: 4\n    hashtag_name: '#testtest'\n    user_information_id: 2\n  - id: 5\n    hashtag_name: '#hashtagagain'\n    user_information_id: 1"
							}
						}
					}
				}
			}
		},
		"/userInformation/update/{id}": {
			"put": {
				"tags": ["user-information"],
				"description": "Updates user informations",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User information ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_3"
							},
							"examples": {
								"0": {
									"value": "{\n    \"user_id\": 39,\n    \"profile_url\": null,\n    \"bio\": \"Test my bio\",\n    \"date_of_birth\": \"2022-05-31\",\n    \"gender\": \"male\",\n    \"email\": \"email\",\n    \"phone_number\": \"+55555555555\",\n    \"country\": \"test country\",\n    \"city\": \"test city\",\n    \"state\": \"test state\",\n    \"zip_code\": 10000,\n    \"address\": \"Test my address \",\n    \"twitter\": \"frfrfrfrfrf\",\n    \"facebook\": null,\n    \"instagram\": null,\n    \"linkedin\": null,\n    \"tiktok\": null,\n    \"employer_name\": \"Test employer\",\n    \"job_role\": \"CEO\",\n    \"education\": \"No education\",\n    \"other_education\": \"No test education\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"userInformation\":1}"
							}
						}
					}
				}
			}
		},
		"/debt/update/{id}": {
			"put": {
				"tags": ["debt"],
				"description": "Update debt by id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_4"
							},
							"examples": {
								"0": {
									"value": "{\n\t\"amount\": \"500\",\n\t\"due_date\": \"2022-05-07\",\n\t\"user_id\": \"16\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"debt\":1}"
							}
						}
					}
				}
			}
		},
		"/hashtag/{user_info_id}": {
			"get": {
				"tags": ["hashtag"],
				"description": "Gets hashtag by user information id",
				"parameters": [
					{
						"name": "user_info_id",
						"in": "path",
						"description": "User information id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\": 1,\"hashtag_name\": \"#test\",\"user_information_id\": 1},{\"id\": 5,\"hashtag_name\": \"#hashtagagain\", \"user_information_id\": 1},{\"id\": 6,\"hashtag_name\": \"#testagain\",\"user_information_id\": 1}] "
							}
						}
					}
				}
			}
		},
		"/hashtag/delete/{id}": {
			"delete": {
				"tags": ["hashtag"],
				"description": "Deletes hashtag",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Hashtag ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"hashtag\":1}"
							}
						}
					}
				}
			}
		},
		"/debt/dueDate/{id}": {
			"get": {
				"tags": ["debt"],
				"description": "Gets due date for debt",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"text/html; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"examples": {}
							}
						}
					}
				}
			}
		},
		"/userInformation/delete/{id}": {
			"delete": {
				"tags": ["user-information"],
				"description": "Deletes user infomations for user",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"userInformation\":1}"
							}
						}
					}
				}
			}
		},
		"/userInformation/{user_id}": {
			"get": {
				"tags": ["user-information"],
				"description": "Gets user information by user id",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"id\":7,\"user_id\":37,\"bio\":\"Test my bio\",\"date_of_birth\":\"2022-05-31T00:00:00.000Z\",\"gender\":\"male\",\"email\":\"email\",\"phone_number\":\"+55555555555\",\"country\":\"test country\",\"city\":\"test city\",\"state\":\"test state\",\"zip_code\":10000,\"address\":\"Test my address \",\"twitter\":\"frfrfrfrfrf\",\"employer_name\":\"Test employer\",\"job_role\":\"CEO\",\"education\":\"No education\",\"other_education\":\"No test education\"}"
							}
						}
					}
				}
			}
		},
		"/debt/add": {
			"post": {
				"tags": ["debt"],
				"description": "Adds new debt",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/debt_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n\t\"amount\": \"500\",\n\t\"due_date\": \"2022-05-07\",\n\t\"user_id\": \"17\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"id\":6,\"amount\":500,\"due_date\":\"2022-05-07T00:00:00.000Z\",\"user_id\":17}"
							}
						}
					}
				}
			}
		},
		"/record/delete/{id}": {
			"delete": {
				"tags": ["record"],
				"description": "Delete a record",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"record\":1}"
							}
						}
					}
				}
			}
		},
		"/record/list": {
			"get": {
				"tags": ["record"],
				"description": "Get all records",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"examples": {
									"0": {
										"value": [
											{
												"id": 10,
												"amount": 30,
												"type": "expense",
												"category_id": 1,
												"timestamp": "2022-05-25T15:57:41.000Z",
												"transaction_id": 6,
												"currency_id": 1,
												"account_id": 6
											}
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/record/add": {
			"post": {
				"tags": ["record"],
				"description": "Add a record",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/record_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"amount\": 30,\n        \"type\": \"expense\",\n        \"category_id\": 1,\n        \"transaction_id\": 6,\n        \"currency_id\": 1,\n        \"account_id\": 6\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"examples": {
									"0": {
										"value": {
											"amount": 30,
											"type": "expense",
											"category_id": 1,
											"transaction_id": 6,
											"currency_id": 1,
											"account_id": 6
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/record/update/{id}": {
			"put": {
				"tags": ["record"],
				"description": "Update a record",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_10_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"amount\": 100\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"record\":1}"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"tags": ["auth"],
				"description": "Log in a user",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/auth_login_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"email\": \"test\",\n    \"password\": \"password\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"data\":{\"user\":[{\"id\":37,\"role_id\":1,\"full_name\":\"ime\",\"email\":\"test\",\"password\":\"$2b$10$SIdb.mMUme3Dthq5KXoSc.L7wQSHihnv.mNfMCVkKGhVnpyXXHYgu\",\"default_currency_id\":1,\"user_feature_id\": null}],\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTMzODY5MzAsImlhdCI6MTY1MzM3OTczMC41MTgsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFNJZGIubU1VbWUzRHRocTVLWG9TYy5MN3dRU0hpaG52Lm1OZk1DVmtLR2hWbnB5WFhIWWd1In0.GPcB2VFHRhA3ytXfT0seBjNC9aetP_k24QktNVm6vOI\"},\"code\":200,\"message\":\"OK\"}"
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/transactionAccount/list": {
			"get": {
				"tags": ["transaction-account"],
				"description": "List all transaction accounts",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\":1,\"balance\":10.5,\"account_type_id\":1,\"name\":\"Lucijan\",\"country\":\"Croatia\",\"bank_name\":\"Test bank name\",\"card_owner\":\"Test owner\",\"card_number\":\"Test number\",\"card_expiration_date\":\"0000-00-00\",\"card_cvc\":\"Test cvc\",\"currency_id\":1,\"user_id\":17,\"status\":\"active\"},{\"id\":2,\"balance\":10.5,\"account_type_id\":1,\"name\":\"askjhgd\",\"bank_name\":\"adf\",\"card_owner\":\"sdfsd\",\"card_number\":\"af\",\"card_expiration_date\":\"0000-00-00\",\"card_cvc\":\"dafgg\",\"currency_id\":1,\"user_id\":16,\"status\":\"active\"}]"
							}
						}
					}
				}
			}
		},
		"/transactionAccount/id/{id}": {
			"get": {
				"tags": ["transaction-account"],
				"description": "Get transaction account for id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Transaction account ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\":1,\"balance\":10.5,\"account_type_id\":1,\"name\":\"Lucijan\",\"country\":\"Croatia\",\"bank_name\":\"Test bank name\",\"card_owner\":\"Test owner\",\"card_number\":\"Test number\",\"card_expiration_date\":\"0000-00-00\",\"card_cvc\":\"Test cvc\",\"currency_id\":1,\"user_id\":17,\"status\":\"active\"}]"
							}
						}
					}
				}
			}
		},
		"/user/email/{email}": {
			"get": {
				"tags": ["user"],
				"description": "Get a user by email",
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"description": "User email",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"id\":16,\"role_id\":1,\"full_name\":\"ime\",\"email\":\"email\",\"password\":\"$2b$10$tIGGiXJKnwZgUy/trwDVHOUPMJW/Pfl/kLKxGQ\",\"phone_number\":\"91234567\",\"default_currency_id\":1,\"user_feature_id\": null}"
							}
						}
					}
				}
			}
		},
		"/transactionAccount/add/": {
			"post": {
				"tags": ["transaction-account"],
				"description": "Add new transaction account",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transactionAccount_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"id\": 7,\n        \"balance\": 10.5,\n        \"account_type_id\": 1,\n        \"name\": \"Test3\",\n        \"country\": null,\n        \"bank_name\": \"adf\",\n        \"card_owner\": \"sdfsd\",\n        \"card_number\": \"af\",\n        \"card_expiration_date\": \"0000-00-00\",\n        \"card_cvc\": \"dafgg\",\n        \"currency_id\": 1,\n        \"user_id\": 16,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"transactionAccount\":{\"id\":10,\"balance\":10.5,\"account_type_id\":1,\"name\":\"Test neme\",\"country\":\"Croatia\",\"bank_name\":\"Test bank name\",\"card_owner\":\"Test owner\",\"card_number\":\"Test number\",\"card_expiration_date\":\"2025-03-05T00:00:00.000Z\",\"card_cvc\":\"Test cvc\",\"currency_id\":1,\"user_id\":17,\"status\":\"active\"}}"
							}
						}
					}
				}
			}
		},
		"/user/{id}": {
			"get": {
				"tags": ["user"],
				"description": "Get a user by id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"id\":16,\"role_id\":1,\"full_name\":\"ime\",\"email\":\"email\",\"password\":\"$2b$10$tIGGiXJKnwZgUy/trwDVHOUPMJW/Pfl/kLKxGQ\",\"default_currency_id\":1,\"user_feature_id\": null}"
							}
						}
					}
				}
			}
		},
		"/auth/signup": {
			"post": {
				"tags": ["auth"],
				"description": "",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/auth_signup_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"full_name\": \"Ime Prezime\"\n    \"email\": \"test2\",\n    \"password\": \"password\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "user_feature_id: 'null' id: 50 role_id: '1' full_name: Ime Prezime email: NewUser2 password: $2b$10$jDPeXmeniYQmldqkQaEaUOeeyMSbMUVruTaAxhZx0D16uUucmopp2 default_currency_id: '1'"
							}
						}
					}
				}
			}
		},
		"/user/": {
			"get": {
				"tags": ["user"],
				"description": "Get all users",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\":16,\"role_id\":1,\"full_name\":\"ime prezime\",\"email\":\"email\",\"password\":\"$2b$10$tIGGiXJKnwZgUy/trwDVHOUPMJW/Pfl/kLKxGQ\",\"default_currency_id\":1,\"user_feature_id\": null},{\"id\":37,\"role_id\":1,\"full_name\":\"ime\",\"email\":\"test\",\"password\":\"$2b$10$SIdb.mMUme3Dthq5KXoSc.L7wQSHihnv.mNfMCVkKGhVnpyXXHYgu\",\"default_currency_id\":1,\"user_feature_id\": null},{\"id\":39,\"role_id\":1,\"full_name\":\"ime\",\"email\":\"test3\",\"password\":\"$2b$10$TplJLAhan8kGhoKAFH/gCOPQZEQ6yYGusIAQbE/8o754joNUDXSNW\",\"default_currency_id\":1,\"user_feature_id\": null}]"
							}
						}
					}
				}
			}
		},
		"/transaction/list": {
			"get": {
				"tags": ["transaction"],
				"description": "List all transactions",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\":1,\"frequency\":\"monthly\",\"user_id\":16,\"account_id\":3,\"category_id\":1,\"status\":\"active\"},{\"id\":6,\"frequency\":\"weekly\",\"user_id\":16,\"account_id\":2,\"category_id\":1,\"status\":\"inactive\"}]"
							}
						}
					}
				}
			}
		},
		"/transactionCategory/{user_id}": {
			"get": {
				"tags": ["transaction-category"],
				"description": "Get a transaction category by user id",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\":1,\"name\":\"New name\",\"user_id\":16,\"icon_url\":\"test icon url\",\"type\":\"income\",\"is_default\":1,\"status\":\"active\"}]"
							}
						}
					}
				}
			}
		},
		"/transactionCategory/": {
			"get": {
				"tags": ["transaction-category"],
				"description": "List all transaction categories",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "[{\"id\":1,\"name\":\"New name\",\"user_id\":16,\"icon_url\":\"test icon url\",\"type\":\"income\",\"is_default\":1,\"status\":\"active\"},{\"id\":3,\"name\":\"TestName\",\"user_id\":17,\"icon_url\":\"icon_url\",\"type\":\"expense\",\"is_default\":1,\"status\":\"active\"},{\"id\":4,\"name\":\"TestName2\",\"user_id\":17,\"icon_url\":\"icon_url\",\"type\":\"income\",\"is_default\":1,\"status\":\"\"}]"
							}
						}
					}
				}
			}
		},
		"/transactionCategory/delete/{id}": {
			"delete": {
				"tags": ["transaction-category"],
				"description": "Delete a transaction category by id",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"info\":\"Rows matched: 1  Changed: 1  Warnings: 0\",\"serverStatus\":2,\"warningStatus\":0,\"changedRows\":1}"
							}
						}
					}
				}
			}
		},
		"/user/delete/{id}": {
			"delete": {
				"tags": ["user"],
				"description": "Delete a user",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"user\":1}"
							}
						}
					}
				}
			}
		},
		"/transaction/delete/{id}": {
			"delete": {
				"tags": ["transaction"],
				"description": "Delete a transaction",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Auto generated using Swagger Inspector",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"transaction\":1}"
							}
						}
					}
				}
			}
		},
		"/user/update/{id}": {
			"put": {
				"tags": ["user"],
				"description": "Update user",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_5"
							},
							"examples": {
								"0": {
									"value": "{\n        \"role_id\": 1,\n        \"full_name\": \"Ime Prezime\",\n        \"email\": \"mail\",\n        \"password\": \"$2b$10$M4QdxV/.ReaW3P25HBO7wumg.DJAiVIo1QF2SAjeeeiR89aXen6Dy\",\n        \"phone_number\": \"91234567\",\n        \"default_currency_id\": 1,\n        \"user_feature_id\": null\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"user\":1}"
							}
						}
					}
				}
			}
		},
		"/transaction/update/{id}": {
			"put": {
				"tags": ["transaction"],
				"description": "Update transaction",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"frequency\": \"weekly\",\n        \"user_id\": 16,\n        \"account_id\": 3,\n        \"category_id\": 1,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"transaction\":[1]}"
							}
						}
					}
				}
			}
		},
		"/transactionCategory/update/{id}": {
			"put": {
				"tags": ["transaction-category"],
				"description": "Update transaction category",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_1"
							},
							"examples": {
								"0": {
									"value": "{\n        \"name\": \"New updated name\",\n        \"user_id\": 16,\n        \"icon_url\": \"test icon url\",\n        \"type\": \"income\",\n        \"is_default\": 1,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"transactionCategory\":1}"
							}
						}
					}
				}
			}
		},
		"/transaction/add": {
			"post": {
				"tags": ["transaction"],
				"description": "Add a new transaction",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transaction_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n\n        \"frequency\": \"Weekly\",\n        \"user_id\": 16,\n        \"account_id\": 2,\n        \"category_id\": 1,\n        \"status\": \"Inactive\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":9,\"info\":\"\",\"serverStatus\":2,\"warningStatus\":0}"
							}
						}
					}
				}
			}
		},
		"/transactionCategory/add": {
			"post": {
				"tags": ["transaction-category"],
				"description": "Add a new transaction category",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transactionCategory_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"name\": \"TestName3\",\n        \"user_id\": \"16\",\n        \"icon_url\": \"icon_url\",\n        \"type\": \"Income\",\n        \"is_default\": \"1\",\n        \"status\": \"status\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":4,\"info\":\"\",\"serverStatus\":2,\"warningStatus\":1}"
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"record_add_body": {
				"type": "object",
				"properties": {
					"transaction_id": {
						"type": "integer"
					},
					"amount": {
						"type": "integer"
					},
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"type": {
						"type": "string"
					},
					"currency_id": {
						"type": "integer"
					}
				}
			},
			"update_10_body": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "integer"
					}
				}
			},
			"auth_login_body": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"transactionAccount_add_body": {
				"type": "object",
				"properties": {
					"country": {},
					"card_number": {
						"type": "string"
					},
					"card_expiration_date": {
						"type": "string"
					},
					"card_cvc": {
						"type": "string"
					},
					"account_type_id": {
						"type": "integer"
					},
					"balance": {
						"type": "number"
					},
					"user_id": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					},
					"bank_name": {
						"type": "string"
					},
					"id": {
						"type": "integer"
					},
					"card_owner": {
						"type": "string"
					},
					"currency_id": {
						"type": "integer"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"auth_signup_body": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"update_id_body": {
				"type": "object",
				"properties": {
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"user_id": {
						"type": "integer"
					},
					"frequency": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"update_id_body_1": {
				"type": "object",
				"properties": {
					"icon_url": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"is_default": {
						"type": "integer"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"transaction_add_body": {
				"type": "object",
				"properties": {
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"user_id": {
						"type": "integer"
					},
					"frequency": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"transactionCategory_add_body": {
				"type": "object",
				"properties": {
					"icon_url": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"is_default": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"hashtag_add_body": {
				"type": "object",
				"properties": {
					"user_information_id": {
						"type": "integer"
					},
					"hashtag_name": {
						"type": "string"
					}
				}
			},
			"userInformation_add_body": {
				"type": "object",
				"properties": {
					"country": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"job_role": {
						"type": "string"
					},
					"education": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"profile_url": {},
					"city": {
						"type": "string"
					},
					"date_of_birth": {
						"type": "string"
					},
					"facebook": {},
					"bio": {
						"type": "string"
					},
					"employer_name": {
						"type": "string"
					},
					"instagram": {},
					"linkedin": {},
					"zip_code": {
						"type": "integer"
					},
					"other_education": {
						"type": "string"
					},
					"twitter": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"tiktok": {},
					"phone_number": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"update_id_body_2": {
				"type": "object",
				"properties": {
					"user_information_id": {
						"type": "integer"
					},
					"hashtag_name": {
						"type": "string"
					}
				}
			},
			"update_id_body_3": {
				"type": "object",
				"properties": {
					"country": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"job_role": {
						"type": "string"
					},
					"education": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"profile_url": {},
					"city": {
						"type": "string"
					},
					"date_of_birth": {
						"type": "string"
					},
					"facebook": {},
					"bio": {
						"type": "string"
					},
					"employer_name": {
						"type": "string"
					},
					"instagram": {},
					"linkedin": {},
					"zip_code": {
						"type": "integer"
					},
					"other_education": {
						"type": "string"
					},
					"twitter": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"tiktok": {},
					"phone_number": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"update_id_body_4": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"due_date": {
						"type": "string"
					}
				}
			},
			"debt_add_body": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"due_date": {
						"type": "string"
					}
				}
			},
			"update_id_body_5": {
				"type": "object",
				"properties": {
					"default_currency_id": {
						"type": "integer"
					},
					"firstname": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role_id": {
						"type": "integer"
					},
					"phone_number": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					}
				}
			},
			"UserInformation": {
				"type": "object",
				"properties": {
					"profile_url": { "type": "string" },
					"bio": { "type": "string" },
					"date_of_birth": { "type": "string" },
					"gender": { "type": "string" },
					"country": { "type": "string" },
					"job_role": { "type": "string" },
					"education": { "type": "string" }
				}
			},
			"MentorInformation": {
				"type": "object",
				"properties": {
					"industry": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"role": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"frequency": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"conversation_mode": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"isPassedIRT": {
						"type": "boolean"
					}
				}
			},
			"Mentor": {
				"type": "object",
				"description": "Object schema",
				"properties": {
					"id": {
						"type": "integer"
					},
					"mentor_id": {
						"type": "integer"
					},
					"mentee_id": {
						"type": "integer"
					},
					"request_type": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"is_contract_signed_by_mentee": {
						"type": "boolean"
					},
					"is_contract_signed_by_mentor": {
						"type": "boolean"
					},
					"mentee": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer"
							},
							"full_name": {
								"type": "string"
							},
							"user_information": {
								"$ref": "#/components/schemas/UserInformation"
							}
						}
					},
					"mentor": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer"
							},
							"full_name": {
								"type": "string"
							},
							"user_information": {
								"$ref": "#/components/schemas/UserInformation"
							},
							"mentor_information": {
								"$ref": "#/components/schemas/MentorInformation"
							}
						}
					}
				}
			},
			"MentorDetail" : {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer"
					},
					"user_information": {
						"$ref": "#/components/schemas/UserInformation"
					},
					"mentor_information": {
						"$ref": "#/components/schemas/MentorInformation"
					}
				}
			},
			"SearchMentor": {
				"type": "array",
				"description": "Object schema",
				"items": {
					"type": "object",
					"properties": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer"
							},
							"full_name": "string"
						}
					}
				}
			},
			"CreateMentorRequest": {
				"required": ["mentor_id", "message"],
				"properties": {
					"mentor_id": {
						"type": "integer"
					},
					"message": {
						"type": "string"
					}
				}
			},
			"AcceptOrRejectMentorRequest": {
				"required": ["mentee_id", "request_id"],
				"properties": {
					"mentee_id": {
						"type": "integer"
					},
					"request_id": {
						"type": "integer"
					}
				}
			},
			"FavoriteOrUnfavoriteMentor": {
				"required": ["mentor_id"],
				"properties": {
					"mentor_id": {
						"type": "integer"
					}
				}
			},
			"MentorContract": {
				"required": ["request_id"],
				"properties": {
					"request_id": {
						"type": "integer"
					}
				}
			},
			"CreateOrUpdateMentorInformation": {
				"required": ["isPassedIRT", "industry", "role", "conversation_mode", "frequency"],
				"properties": {
					"isPassedIRT": {
						"type": "boolean"
					},
					"industry": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"role": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"conversation_mode": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"frequency": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			}
		}
	}
}
