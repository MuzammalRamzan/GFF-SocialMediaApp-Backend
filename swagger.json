{
	"openapi": "3.0.0",
	"info": {
		"title": "GFF Backend API",
		"description": "",
		"version": "1.0"
	},
	"schemes": ["http", "https"],
	"host": "3.125.40.16",
	"basePath": "/",
	"tags": [
		{
			"name": "auth",
			"description": "Authentication related routes"
		},
		{
			"name": "user",
			"description": "App users related routes"
		},
		{
			"name": "user-information",
			"description": "User information related routes"
		},
		{
			"name": "transaction-account",
			"description": "Transaction-Account related routes"
		},
		{
			"name": "transaction",
			"description": "Transaction related routes"
		},
		{
			"name": "transaction-category",
			"description": "Transaction-Category related routes"
		},
		{
			"name": "record",
			"description": "Record related routes"
		},
		{
			"name": "hashtag",
			"description": "Hashtags related routes"
		},
		{
			"name": "debt",
			"description": "Debt related routes"
		},
		{
			"name": "loan-ledger-personal-info",
			"description": "Loan Ledger personal info related routes"
		},
		{
			"name": "loan-ledger-professional-info",
			"description": "Loan Ledger professional info related routes"
		},
		{
			"name": "mpesa",
			"description": "Mpesa related routes"
		},
		{
			"name": "dailydose",
			"description": "daily dose apis routes"
		},
		{
			"name": "dailyArticle",
			"description": "Daily Article apis"
		},
		{
			"name": "uploads",
			"description": "File upload related routes"
		}
	],
	"paths": {
		"/user/fullUser": {
			"get": {
				"tags": ["user"],
				"description": "Get full user information",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"fullUser": [
											{
												"id": 37,
												"user_id": 37,
												"profile_url": null,
												"bio": "Test my bio",
												"date_of_birth": "2022-05-31",
												"gender": "other",
												"email": "test",
												"phone_number": "+55555555555",
												"country": "test country",
												"city": "test city",
												"state": "test state",
												"zip_code": 10000,
												"address": "Test my address ",
												"employer_name": "Test employer",
												"job_role": "CEO",
												"education": "No education",
												"other_education": "No test education",
												"twitter": null,
												"facebook": null,
												"instagram": null,
												"linkedin": null,
												"tiktok": null,
												"role_id": 1,
												"full_name": "ime prezime",
												"password": "$2b$10$Q9BzTt.cFMsuFlioq/BMYuTd5GQbCpJQU.9oAPag.JhCngu3Z7hgq",
												"default_currency_id": 1,
												"user_feature_id": null
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/mpesa/auth": {
			"get": {
				"tags": ["mpesa"],
				"description": "Get access token for mpesa",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"response": {
											"access_token": "BMaGQC4Ccg0AFwVA111owu3kWnAY",
											"expires_in": "3599"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/update/{id}": {
			"put": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Update a loan ledger professional info",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger professional information ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_7"
							},
							"examples": {
								"0": {
									"value": "{\r\n            \"employment_type\": \"Test employment_type2\",\r\n            \"company_name\": \"Test company_name3\",\r\n            \"profession\": \"Test profession2\",\r\n            \"education\": \"Test education2\",\r\n            \"net_monthly_salary\": 101.83,\r\n            \"work_experience\": \"Test work_experience2\"\r\n        }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"professionalInformation": {
											"id": 10,
											"user_id": 37,
											"employment_type": "Test employment_type2",
											"company_name": "Test company_name3",
											"profession": "Test profession2",
											"education": "Test education2",
											"net_monthly_salary": 101.83,
											"work_experience": "Test work_experience2"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/{id}": {
			"get": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Get loan ledger professional information by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger professional info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"professionalInformation": {
											"id": 9,
											"user_id": 37,
											"employment_type": "Test employment_type",
											"company_name": "Test company_name",
											"profession": "Test profession",
											"education": "Test education",
											"net_monthly_salary": 100.73,
											"work_experience": "Test work_experience"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/user/{id}": {
			"get": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Get loan ledger informations for a user",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"professionalInformation": [
											{
												"id": 9,
												"user_id": 37,
												"employment_type": "Test employment_type",
												"company_name": "Test company_name",
												"profession": "Test profession",
												"education": "Test education",
												"net_monthly_salary": 100.73,
												"work_experience": "Test work_experience"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/add": {
			"post": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Add professional information for loan ledger",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/loanLedgerProfessionalInformation_add_body"
							},
							"examples": {
								"0": {
									"value": "{\r\n            \"user_id\": 37,\r\n            \"employment_type\": \"Test employment_type\",\r\n            \"company_name\": \"Test company_name\",\r\n            \"profession\": \"Test profession\",\r\n            \"education\": \"Test education\",\r\n            \"net_monthly_salary\": 100.73,\r\n            \"work_experience\": \"Test work_experience\"\r\n        }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"example": {
										"data": {
											"professionalInformation": {
												"id": 10,
												"user_id": 37,
												"employment_type": "Test employment_type",
												"company_name": "Test company_name",
												"profession": "Test profession",
												"education": "Test education",
												"net_monthly_salary": 100.73,
												"work_experience": "Test work_experience"
											}
										},
										"code": 200,
										"message": "OK"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/list": {
			"get": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Get all loan ledger professional informations",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"example": {
										"data": {
											"professionalInformation": [
												{
													"id": 1,
													"user_id": 38,
													"employment_type": "Test employment_type3",
													"company_name": "Test company_name2",
													"profession": "Test profession2",
													"education": "Test education2",
													"net_monthly_salary": 100.83,
													"work_experience": "Test work_experience2"
												},
												{
													"id": 5,
													"user_id": 63,
													"employment_type": "Test employment_type",
													"company_name": "Test company_name",
													"profession": "Test profession",
													"education": "Test education",
													"net_monthly_salary": 500,
													"work_experience": "Test"
												},
												{
													"id": 9,
													"user_id": 37,
													"employment_type": "Test employment_type",
													"company_name": "Test company_name",
													"profession": "Test profession",
													"education": "Test education",
													"net_monthly_salary": 100.73,
													"work_experience": "Test work_experience"
												}
											]
										},
										"code": 200,
										"message": "OK"
									}
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/delete/{id}": {
			"delete": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Delete a loan ledger professional information",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger professional info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"professionalInformation": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/add": {
			"post": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Add personal information for loan ledger",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/loanLedgerPersonalInformation_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"user_id\": 37,\n    \"full_name\": \"Ime\",\n    \"national_id\": \"12345678\",\n    \"date_of_birth\": \"1990-09-09\",\n    \"registration_number\": \"1234567890\",\n    \"gender\": \"male\",\n    \"email\": \"testemail@email\",\n    \"mobile_phone\": \"123456789\",\n    \"current_residence\": \"Street\",\n    \"house_number\": \"15\",\n    \"country\": \"Croatia\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": {
											"id": 6,
											"user_id": 37,
											"full_name": "Name",
											"national_id": "12345678",
											"date_of_birth": "1990-07-07T00:00:00.000Z",
											"registration_number": "1234567890",
											"gender": "male",
											"email": "testemail@email",
											"mobile_phone": "123456789",
											"current_residence": "Street",
											"house_number": "15",
											"country": "Croatia"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"examples": {
									"0": {
										"value": {
											"message": "Unauthorized",
											"status": 401
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/list": {
			"get": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Get all loan ledger personal informations",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanPersonalInfos": [
											{
												"id": 1,
												"user_id": 63,
												"full_name": "Name",
												"national_id": "12345678",
												"date_of_birth": "1990-06-06",
												"registration_number": "1234567890",
												"gender": "male",
												"email": "email@email",
												"mobile_phone": "123456789",
												"current_residence": "Street",
												"house_number": "15",
												"country": "Croatia"
											},
											{
												"id": 2,
												"user_id": 37,
												"full_name": "Name",
												"national_id": "12345678",
												"date_of_birth": "1990-07-07",
												"registration_number": "1234567890",
												"gender": "male",
												"email": "testemail@email",
												"mobile_phone": "123456789",
												"current_residence": "Street",
												"house_number": "15",
												"country": "Croatia"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/{id}": {
			"get": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Get loan ledger personal information by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger personal info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loalLedgerPersonalInfo": {
											"id": 2,
											"user_id": 37,
											"full_name": "Name",
											"national_id": "12345678",
											"date_of_birth": "1990-07-07",
											"registration_number": "1234567890",
											"gender": "male",
											"email": "testemail@email",
											"mobile_phone": "123456789",
											"current_residence": "Street",
											"house_number": "15",
											"country": "Croatia"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/delete/{id}": {
			"delete": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Delete a loan ledger personal information",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger personal info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/update/{id}": {
			"put": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Update a loan ledger personal info",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger personal information ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_6"
							},
							"examples": {
								"0": {
									"value": "{\n    \"country\": \"Italy\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": {
											"id": 2,
											"user_id": 37,
											"full_name": "Name",
											"national_id": "12345678",
											"date_of_birth": "1990-07-07",
											"registration_number": "1234567890",
											"gender": "male",
											"email": "testemail@email",
											"mobile_phone": "123456789",
											"current_residence": "Street",
											"house_number": "120",
											"country": "Italy"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/user/{user_id}": {
			"get": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Get loan ledger informations for a user",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": [
											{
												"id": 2,
												"user_id": 37,
												"full_name": "Name",
												"national_id": "12345678",
												"date_of_birth": "1990-07-07",
												"registration_number": "1234567890",
												"gender": "male",
												"email": "testemail@email",
												"mobile_phone": "123456789",
												"current_residence": "Street",
												"house_number": "15",
												"country": "Croatia"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/delete/{id}": {
			"delete": {
				"tags": ["debt"],
				"description": "Delete a debt",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"debt": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/{id}": {
			"get": {
				"tags": ["debt"],
				"description": "Get debt by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"debt": {
											"id": 1,
											"amount": 300,
											"due_date": "2022-07-07",
											"user_id": 37
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/warrior-information": {
			"get": {
				"tags": ["warrior-information"],
				"description": "Get all warriors",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"warriors": [
											{
												"id": 1,
												"user_id": 169,
												"specialty": "str",
												"certification": "long string",
												"therapy_type": "short",
												"price_range": "12",
												"user": {
													"id": 169,
													"role_id": 4,
													"full_name": "undefined",
													"email": "test1@test.com",
													"default_currency_id": 1,
													"user_feature_id": null
												}
											}
										]
									},
									"message": "Warrior information created successfully",
									"code": 200
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["warrior-information"],
				"description": "Create Wellness Warrior information",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"specialty": ["str"],
								"certification": ["long string"],
								"therapy_type": ["short"],
								"price_range": ["12"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"warriorInformation": {
											"id": 1,
											"user_id": 169,
											"specialty": "str",
											"certification": "long string",
											"therapy_type": "short",
											"price_range": "12"
										}
									},
									"message": "Warrior information created successfully",
									"code": 200
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["warrior-information"],
				"description": "Update Wellness Warrior information",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"specialty": ["str"],
								"certification": ["long string"],
								"therapy_type": ["short"],
								"price_range": ["12"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"warriorInformation": {
											"id": 1,
											"user_id": 169,
											"specialty": "str",
											"certification": "long string",
											"therapy_type": "short",
											"price_range": "12"
										}
									},
									"message": "Warrior information created successfully",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/search": {
			"get": {
				"tags": ["wellness-warrior"],
				"description": "Search Wellness Warrior",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "searchTerm",
						"in": "query",
						"description": "Search",
						"required": true,
						"type": "string",
						"example": "un"
					},
					{
						"name": "specialty",
						"in": "query",
						"description": "Specialty",
						"required": true,
						"type": "string",
						"example": "str,un,in"
					},
					{
						"name": "certification",
						"in": "query",
						"description": "Certification",
						"required": true,
						"type": "string",
						"example": "string,params"
					},
					{
						"name": "therapy_type",
						"in": "query",
						"description": "Therapy Type",
						"required": true,
						"type": "string",
						"example": "type,the"
					},
					{
						"name": "price_range",
						"in": "query",
						"description": "Price Range",
						"required": true,
						"type": "string",
						"example": "20,50,12"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"wellnessWarriors": [
											{
												"id": 169,
												"full_name": "undefined",
												"user_information": {
													"profile_url": null,
													"bio": "Test my bio",
													"date_of_birth": "2022-05-31",
													"gender": "other",
													"country": "test country",
													"job_role": "CEO",
													"education": "No education"
												},
												"warrior_information": {
													"specialty": ["str"],
													"certification": ["long string"],
													"therapy_type": ["short"],
													"price_range": ["12"]
												}
											}
										]
									},
									"message": "Get Wellness Warriors successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/all-sended-request": {
			"get": {
				"tags": ["wellness-warrior"],
				"description": "Get all sended request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"requests": [
											{
												"id": 1,
												"user_id": 37,
												"warrior_id": 169,
												"status": "send",
												"request_type": "warrior",
												"warrior": {
													"id": 169,
													"full_name": "undefined",
													"user_information": {
														"profile_url": null,
														"bio": "Test my bio",
														"date_of_birth": "2022-05-31",
														"gender": "other",
														"country": "test country",
														"job_role": "CEO",
														"education": "No education"
													},
													"warrior_information": {
														"specialty": "str",
														"certification": "long string",
														"therapy_type": "short",
														"price_range": "12"
													}
												},
												"user": {
													"id": 37,
													"full_name": "ime-prezime",
													"user_information": null
												}
											}
										]
									},
									"message": "Get requests successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/all-request": {
			"get": {
				"tags": ["wellness-warrior"],
				"description": "Get all received requests",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"requests": [
											{
												"id": 1,
												"user_id": 37,
												"warrior_id": 169,
												"status": "send",
												"request_type": "warrior",
												"warrior": {
													"id": 169,
													"full_name": "undefined",
													"user_information": {
														"profile_url": null,
														"bio": "Test my bio",
														"date_of_birth": "2022-05-31",
														"gender": "other",
														"country": "test country",
														"job_role": "CEO",
														"education": "No education"
													},
													"warrior_information": {
														"specialty": "str",
														"certification": "long string",
														"therapy_type": "short",
														"price_range": "12"
													}
												},
												"user": {
													"id": 37,
													"full_name": "ime-prezime",
													"user_information": null
												}
											}
										]
									},
									"message": "Get requests successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/my-warriors": {
			"get": {
				"tags": ["wellness-warrior"],
				"description": "Get all my warriors",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"wellnessWarriors": [
											{
												"id": 1,
												"user_id": 37,
												"warrior_id": 169,
												"status": "approve",
												"request_type": "warrior",
												"warrior": {},
												"user": {}
											}
										]
									},
									"message": "Get wellness warriors successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/all-favorite-warrior": {
			"get": {
				"tags": ["wellness-warrior"],
				"description": "Get all favorite warriors",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"wellnessWarriors": [
											{
												"id": 3,
												"user_id": 37,
												"warrior_id": 169,
												"status": "send",
												"request_type": "favorite",
												"warrior": {},
												"user": {}
											}
										]
									},
									"message": "Get wellness warriors successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/favorite-warrior": {
			"post": {
				"tags": ["wellness-warrior"],
				"description": "Add favorite warrior",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"warrior_id": 169
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"favorite": true
									},
									"message": "Favorite wellness warrior successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/unfavorite-warrior": {
			"post": {
				"tags": ["wellness-warrior"],
				"description": "Remove favorite warrior",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"warrior_id": 169
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"favorite": false
									},
									"message": "Unfavorite wellness warrior successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/request/{request_id}": {
			"get": {
				"tags": ["wellness-warrior"],
				"description": "Get request by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"request_id": 1
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"request": {
											"id": 1,
											"user_id": 37,
											"warrior_id": 169,
											"status": "approve",
											"request_type": "warrior",
											"warrior": {
												"id": 169,
												"full_name": "undefined",
												"user_information": {
													"profile_url": null,
													"bio": "Test my bio",
													"date_of_birth": "2022-05-31",
													"gender": "other",
													"country": "test country",
													"job_role": "CEO",
													"education": "No education"
												},
												"warrior_information": {
													"specialty": "str",
													"certification": "long string",
													"therapy_type": "short",
													"price_range": "12"
												}
											},
											"user": {
												"id": 37,
												"full_name": "ime-prezime",
												"user_information": null
											}
										}
									},
									"message": "Get request successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/approve-request": {
			"post": {
				"tags": ["wellness-warrior"],
				"description": "Approve request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"request_id": 1
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"request": true
									},
									"message": "Approve request successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/reject-request": {
			"post": {
				"tags": ["wellness-warrior"],
				"description": "Reject request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"request_id": 1
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"request": true
									},
									"message": "Reject request successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/": {
			"delete": {
				"tags": ["wellness-warrior"],
				"description": "Remove Warrior/User",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"request_id": { "type": "integer" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User/Warrior removed from your list",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"code": { "type": "integer" },
										"message": { "type": "string" },
										"data": {
											"type": "object"
										}
									}
								},
								"exmaple": {
									"code": 200,
									"message": "User/Warrior removed from your list",
									"data": {}
								}
							}
						}
					}
				}
			}
		},
		"/wellness-warrior/send-request": {
			"post": {
				"tags": ["wellness-warrior"],
				"description": "Send request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"warrior_id": 169
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"request": {
											"id": 1,
											"user_id": 37,
											"warrior_id": 169,
											"status": "approve",
											"request_type": "warrior",
											"warrior": {
												"id": 169,
												"full_name": "undefined",
												"user_information": {},
												"warrior_information": {}
											},
											"user": {
												"id": 37,
												"full_name": "ime-prezime",
												"user_information": {}
											}
										}
									},
									"message": "Send request successfully!",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/user/fullUser": {
			"get": {
				"tags": ["user"],
				"description": "Get full user information",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"fullUser": [
											{
												"id": 37,
												"user_id": 37,
												"profile_url": null,
												"bio": "Test my bio",
												"date_of_birth": "2022-05-31",
												"gender": "other",
												"email": "test",
												"phone_number": "+55555555555",
												"country": "test country",
												"city": "test city",
												"state": "test state",
												"zip_code": 10000,
												"address": "Test my address ",
												"employer_name": "Test employer",
												"job_role": "CEO",
												"education": "No education",
												"other_education": "No test education",
												"twitter": null,
												"facebook": null,
												"instagram": null,
												"linkedin": null,
												"tiktok": null,
												"role_id": 1,
												"full_name": "ime prezime",
												"password": "$2b$10$Q9BzTt.cFMsuFlioq/BMYuTd5GQbCpJQU.9oAPag.JhCngu3Z7hgq",
												"default_currency_id": 1,
												"user_feature_id": null
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/mpesa/auth": {
			"get": {
				"tags": ["mpesa"],
				"description": "Get access token for mpesa",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"response": {
											"access_token": "BMaGQC4Ccg0AFwVA111owu3kWnAY",
											"expires_in": "3599"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/update/{id}": {
			"put": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Update a loan ledger professional info",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger professional information ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_7"
							},
							"examples": {
								"0": {
									"value": "{\r\n            \"employment_type\": \"Test employment_type2\",\r\n            \"company_name\": \"Test company_name3\",\r\n            \"profession\": \"Test profession2\",\r\n            \"education\": \"Test education2\",\r\n            \"net_monthly_salary\": 101.83,\r\n            \"work_experience\": \"Test work_experience2\"\r\n        }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"professionalInformation": {
											"id": 10,
											"user_id": 37,
											"employment_type": "Test employment_type2",
											"company_name": "Test company_name3",
											"profession": "Test profession2",
											"education": "Test education2",
											"net_monthly_salary": 101.83,
											"work_experience": "Test work_experience2"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/{id}": {
			"get": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Get loan ledger professional information by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger professional info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transactionAccount_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"id\": 7,\n        \"balance\": 10.5,\n        \"account_type_id\": 1,\n        \"name\": \"Test3\",\n        \"country\": null,\n        \"bank_name\": \"adf\",\n        \"card_owner\": \"sdfsd\",\n        \"card_number\": \"af\",\n        \"card_expiration_date\": \"0000-00-00\",\n        \"card_cvc\": \"dafgg\",\n        \"currency_id\": 1,\n        \"user_id\": 16,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionAccount": {
											"id": 12,
											"balance": 10.5,
											"account_type_id": 1,
											"name": "Test neme",
											"country": "Croatia",
											"bank_name": "Test bank name",
											"card_owner": "Test owner",
											"card_number": "Test number",
											"card_expiration_date": "2025-03-05T00:00:00.000Z",
											"card_cvc": "Test cvc",
											"currency_id": 1,
											"user_id": 37,
											"status": "active"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},

		"/dailyArticle/add": {
			"post": {
				"tags": ["dailyArticle"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"description": "Post api to post a new article",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"title": { "type": "string", "format": "string" },
									"subtitle": { "type": "string", "format": "string" },
									"contentURL": { "type": "string", "format": "string" },
									"contentBody": { "type": "string", "format": "string" },
									"keyWord": { "type": "string", "format": "string" },
									"category[0]": { "type": "string", "format": "string" },
									"category[1]": { "type": "string", "format": "string" },
									"category[2]": { "type": "string", "format": "string" },
									"Image": { "type": "string", "format": "binary" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"id": 4,
										"title": "abc",
										"subtitle": "abc",
										"image": "https://girls-first-finance.s3.amazonaws.com//uploads/dailyArticle/images/1658829054602_SAVAGE.be91855464b02bcda981.png",
										"contentURL": "chirag agrawal",
										"keyWord": "chirag",
										"category": "[\"news\",\"friend-finder\"]"
									},
									"code": 200,
									"message": "dailyArticle posted successfully"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyArticle/update/{id}": {
			"put": {
				"tags": ["dailyArticle"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction category ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"description": "Put api to update article",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"title": { "type": "string", "format": "string" },
									"subtitle": { "type": "string", "format": "string" },
									"contentURL": { "type": "string", "format": "string" },
									"keyWord": { "type": "string", "format": "string" },
									"contentBody": { "type": "string", "format": "string" },
									"category[0]": { "type": "string", "format": "string" },
									"category[1]": { "type": "string", "format": "string" },
									"category[2]": { "type": "string", "format": "string" },
									"Image": { "type": "string", "format": "binary" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"id": 4,
										"title": "Chirag agrawal",
										"subtitle": "abc",
										"image": "https://girls-first-finance.s3.amazonaws.com//uploads/dailyArticle/images/1658829475794_splassive.2e66af6fb1bc74651dc8.png",
										"contentURL": "chirag agrawal",
										"contentBody": null,
										"keyWord": "chirag",
										"category": "[\"news\",\"friend-finder\"]"
									},
									"code": 200,
									"message": "dailyArticle updated successfully"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyArticle/getByCategory": {
			"get": {
				"tags": ["dailyArticle"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "category",
						"in": "query",
						"description": "category name,'friend-finder', 'budget-buster', 'you-should-know'",
						"type": "string"
					}
				],
				"description": "Get api to get data for each category",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": [
										{
											"id": 2,
											"title": "abc",
											"subtitle": "abc",
											"image": "https://girls-first-finance.s3.amazonaws.com/uploads/dailyArticle/images/1656924004579_1656412524843_abc_(1).png",
											"contentURL": "chirag agrawal",
											"contentBody": null,
											"keyWord": "chirag",
											"category": "[\"news\",\"friend-finder\"]"
										},
										{
											"id": 4,
											"title": "abc",
											"subtitle": "abc",
											"image": "https://girls-first-finance.s3.amazonaws.com//uploads/dailyArticle/images/1658829054602_SAVAGE.be91855464b02bcda981.png",
											"contentURL": "chirag agrawal",
											"contentBody": null,
											"keyWord": "chirag",
											"category": "[\"news\",\"friend-finder\"]"
										}
									],
									"code": 200,
									"message": "dailyArticle data!"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyArticle/delete/{id}": {
			"delete": {
				"tags": ["dailyArticle"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "dose id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"description": "delete api to delete article",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": 1,
									"code": 200,
									"message": "dailyArticle deleted successfully"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyDose/add": {
			"post": {
				"tags": ["dailydose"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"description": "Post api to post a new dose",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"title": { "type": "string", "format": "string" },
									"subtitle": { "type": "string", "format": "string" },
									"contentURL": { "type": "string", "format": "string" },
									"keyWord[0]": { "type": "string", "format": "string" },
									"keyWord[1]": { "type": "string", "format": "string" },
									"keyWord[2]": { "type": "string", "format": "string" },
									"category": { "type": "string", "format": "string" },
									"contentBody": { "type": "string", "format": "string" },
									"Image": { "type": "string", "format": "binary" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"id": 2,
										"title": "This is title",
										"subtitle": "This is subtitle",
										"image": "https://girls-first-finance.s3.amazonaws.com//uploads/dailyDose/images/1658830092394_SAVAGE.be91855464b02bcda981.png",
										"contentURL": "This is contentURL",
										"keyWord": "[\"1st\",\"second\"]",
										"category": "news",
										"contentBody": "This is contentBody"
									},
									"code": 200,
									"message": "DailyDose posted sucessfully"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyDose/update/{id}": {
			"put": {
				"tags": ["dailydose"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction category ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"description": "Put api to update dose",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"title": { "type": "string", "format": "string" },
									"subtitle": { "type": "string", "format": "string" },
									"contentURL": { "type": "string", "format": "string" },
									"keyWord": { "type": "string", "format": "string" },
									"contentBody": { "type": "string", "format": "string" },
									"category": { "type": "string", "format": "string" },
									"Image": { "type": "string", "format": "binary" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"id": 24,
										"title": "This is title",
										"subtitle": "This is subtitle",
										"image": "/uploads/dailyDose/images/1658827599568_splassive.2e66af6fb1bc74651dc8.png",
										"contentURL": "This is contentURL",
										"contentBody": "This is contentBody",
										"keyWord": "This is Keywords",
										"category": "news"
									},
									"code": 200,
									"message": "DailyDose Updated Successfully"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyDose/getByCategory": {
			"get": {
				"tags": ["dailydose"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "category",
						"in": "query",
						"description": "category name,'news', 'music', 'wise-words'",
						"type": "string"
					}
				],
				"description": "Get api to get data for each category",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": [
										{
											"id": 2,
											"title": "This is title",
											"subtitle": "This is subtitle",
											"image": "https://girls-first-finance.s3.amazonaws.com//uploads/dailyDose/images/1658830092394_SAVAGE.be91855464b02bcda981.png",
											"contentURL": "This is contentURL",
											"contentBody": "This is contentBody",
											"keyWord": "[\"1st\",\"second\"]",
											"category": "news"
										}
									],
									"code": 200,
									"message": "DailyDose Data for all category 'news'"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/dailyDose/delete/{id}": {
			"delete": {
				"tags": ["dailydose"],
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "dose id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"description": "delete api to delete dose",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": 1,
									"code": 200,
									"message": "DailyDose deleted successfully"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/user/": {
			"get": {
				"tags": ["user"],
				"description": "Get all users",
				"parameters": [
					{
						"name": "role",
						"in": "query",
						"description": "User role id",
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"users": [
											{
												"id": 37,
												"role_id": 3,
												"full_name": "ime-prezime",
												"email": "test",
												"default_currency_id": 1,
												"user_feature_id": null,
												"role": {
													"id": 3,
													"name": "Mentor",
													"authority": "mentor"
												},
												"user_information": null,
												"mentor_information": {
													"id": 6,
													"user_id": 37,
													"isPassedIRT": true,
													"industry": ["str"],
													"role": ["string"],
													"frequency": ["string"],
													"languages": [],
													"conversation_mode": ["string"]
												},
												"warrior_information": null
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/add": {
			"post": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Add professional information for loan ledger",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/loanLedgerProfessionalInformation_add_body"
							},
							"examples": {
								"0": {
									"value": "{\r\n            \"user_id\": 37,\r\n            \"employment_type\": \"Test employment_type\",\r\n            \"company_name\": \"Test company_name\",\r\n            \"profession\": \"Test profession\",\r\n            \"education\": \"Test education\",\r\n            \"net_monthly_salary\": 100.73,\r\n            \"work_experience\": \"Test work_experience\"\r\n        }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"example": {
										"data": {
											"professionalInformation": {
												"id": 10,
												"user_id": 37,
												"employment_type": "Test employment_type",
												"company_name": "Test company_name",
												"profession": "Test profession",
												"education": "Test education",
												"net_monthly_salary": 100.73,
												"work_experience": "Test work_experience"
											}
										},
										"code": 200,
										"message": "OK"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/list": {
			"get": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Get all loan ledger professional informations",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"example": {
										"data": {
											"professionalInformation": [
												{
													"id": 1,
													"user_id": 38,
													"employment_type": "Test employment_type3",
													"company_name": "Test company_name2",
													"profession": "Test profession2",
													"education": "Test education2",
													"net_monthly_salary": 100.83,
													"work_experience": "Test work_experience2"
												},
												{
													"id": 5,
													"user_id": 63,
													"employment_type": "Test employment_type",
													"company_name": "Test company_name",
													"profession": "Test profession",
													"education": "Test education",
													"net_monthly_salary": 500,
													"work_experience": "Test"
												},
												{
													"id": 9,
													"user_id": 37,
													"employment_type": "Test employment_type",
													"company_name": "Test company_name",
													"profession": "Test profession",
													"education": "Test education",
													"net_monthly_salary": 100.73,
													"work_experience": "Test work_experience"
												}
											]
										},
										"code": 200,
										"message": "OK"
									}
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerProfessionalInformation/delete/{id}": {
			"delete": {
				"tags": ["loan-ledger-professional-info"],
				"description": "Delete a loan ledger professional information",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger professional info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMjI1NjAsImlhdCI6MTY1NTExNTM2MC4yMzIsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFE5QnpUdC5jRk1zdUZsaW9xL0JNWXVUZDVHUWJDcEpRVS45b0FQYWcuSmhDbmd1M1o3aGdxIn0.1DDDYGrD_oA1pScmkhbkAZO4zKXSKVqgvBXyVtlY1eg"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"professionalInformation": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/add": {
			"post": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Add personal information for loan ledger",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/loanLedgerPersonalInformation_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"user_id\": 37,\n    \"full_name\": \"Ime\",\n    \"national_id\": \"12345678\",\n    \"date_of_birth\": \"1990-09-09\",\n    \"registration_number\": \"1234567890\",\n    \"gender\": \"male\",\n    \"email\": \"testemail@email\",\n    \"mobile_phone\": \"123456789\",\n    \"current_residence\": \"Street\",\n    \"house_number\": \"15\",\n    \"country\": \"Croatia\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": {
											"id": 6,
											"user_id": 37,
											"full_name": "Name",
											"national_id": "12345678",
											"date_of_birth": "1990-07-07T00:00:00.000Z",
											"registration_number": "1234567890",
											"gender": "male",
											"email": "testemail@email",
											"mobile_phone": "123456789",
											"current_residence": "Street",
											"house_number": "15",
											"country": "Croatia"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"examples": {
									"0": {
										"value": {
											"message": "Unauthorized",
											"status": 401
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/list": {
			"get": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Get all loan ledger personal informations",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanPersonalInfos": [
											{
												"id": 1,
												"user_id": 63,
												"full_name": "Name",
												"national_id": "12345678",
												"date_of_birth": "1990-06-06",
												"registration_number": "1234567890",
												"gender": "male",
												"email": "email@email",
												"mobile_phone": "123456789",
												"current_residence": "Street",
												"house_number": "15",
												"country": "Croatia"
											},
											{
												"id": 2,
												"user_id": 37,
												"full_name": "Name",
												"national_id": "12345678",
												"date_of_birth": "1990-07-07",
												"registration_number": "1234567890",
												"gender": "male",
												"email": "testemail@email",
												"mobile_phone": "123456789",
												"current_residence": "Street",
												"house_number": "15",
												"country": "Croatia"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/{id}": {
			"get": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Get loan ledger personal information by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger personal info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loalLedgerPersonalInfo": {
											"id": 2,
											"user_id": 37,
											"full_name": "Name",
											"national_id": "12345678",
											"date_of_birth": "1990-07-07",
											"registration_number": "1234567890",
											"gender": "male",
											"email": "testemail@email",
											"mobile_phone": "123456789",
											"current_residence": "Street",
											"house_number": "15",
											"country": "Croatia"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/delete/{id}": {
			"delete": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Delete a loan ledger personal information",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger personal info ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/update/{id}": {
			"put": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Update a loan ledger personal info",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Loan ledger personal information ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_6"
							},
							"examples": {
								"0": {
									"value": "{\n    \"country\": \"Italy\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": {
											"id": 2,
											"user_id": 37,
											"full_name": "Name",
											"national_id": "12345678",
											"date_of_birth": "1990-07-07",
											"registration_number": "1234567890",
											"gender": "male",
											"email": "testemail@email",
											"mobile_phone": "123456789",
											"current_residence": "Street",
											"house_number": "120",
											"country": "Italy"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/loanLedgerPersonalInformation/user/{user_id}": {
			"get": {
				"tags": ["loan-ledger-personal-info"],
				"description": "Get loan ledger informations for a user",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "auth-token",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUxMTEwMTgsImlhdCI6MTY1NTEwMzgxOC4wNywiZW1haWwiOiJ0ZXN0IiwicGFzc3dvcmQiOiIkMmIkMTAkUTlCelR0LmNGTXN1Rmxpb3EvQk1ZdVRkNUdRYkNwSlFVLjlvQVBhZy5KaENuZ3UzWjdoZ3EifQ.eNeghc_UR9fqKyZagj3V_5DcAeu9vI1QVUIZZb3qP-Q"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"loanLedgerPersonalInfo": [
											{
												"id": 2,
												"user_id": 37,
												"full_name": "Name",
												"national_id": "12345678",
												"date_of_birth": "1990-07-07",
												"registration_number": "1234567890",
												"gender": "male",
												"email": "testemail@email",
												"mobile_phone": "123456789",
												"current_residence": "Street",
												"house_number": "15",
												"country": "Croatia"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/delete/{id}": {
			"delete": {
				"tags": ["debt"],
				"description": "Delete a debt",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"debt": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/{id}": {
			"get": {
				"tags": ["debt"],
				"description": "Get debt by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"debt": {
											"id": 1,
											"amount": 300,
											"due_date": "2022-07-07",
											"user_id": 37
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/currency/{id}": {
			"get": {
				"tags": ["currency"],
				"description": "Get currency by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Currency ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"currency": {
											"id": 1,
											"symbol": "$",
											"name": "US Dollar"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/currency/add": {
			"post": {
				"tags": ["currency"],
				"description": "Add new currency",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/currency_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"symbol\": \"$\",\n    \"name\": \"US Dollar\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"currency": {
											"id": 2,
											"symbol": "$",
											"name": "US Dollar"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/hashtag/add": {
			"post": {
				"tags": ["hashtag"],
				"description": "Add new hashtag",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/hashtag_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"hashtag_name\": \" testni hashtag\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"hashtag": {
											"id": 18,
											"hashtag_name": "#test2",
											"user_id": 2
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/userInformation/add": {
			"post": {
				"tags": ["user-information"],
				"description": "Add additional user information",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/userInformation_add_body"
							},
							"examples": {
								"0": {
									"value": "{\"user_id\": 37,\"profile_url\": null,\"bio\": \"Test my bio\",\"date_of_birth\": \"2022-05-31\",\"gender\": \"male\",\n  \"email\": \"email\",\"phone_number\": \"+55555555555\", \"country\": \"test country\",\"city\": \"test city\",\n  \"state\": \"test state\",\"zip_code\": 10000,\"address\": \"Test my address \",\"twitter\": \"frfrfrfrfrf\",\n  \"facebook\": null,\"instagram\": null,\"linkedin\": null,\"tiktok\": null,\"employer_name\": \"Test employer\",\n  \"job_role\": \"CEO\",\"education\": \"No education\",\"other_education\": \"No test education\"}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"userInformation": {
											"id": 29,
											"user_id": 71,
											"bio": "Test my bio",
											"profile_url": null,
											"date_of_birth": "2022-05-31T00:00:00.000Z",
											"gender": "male",
											"email": "email",
											"phone_number": "+55555555555",
											"country": "test country",
											"city": "test city",
											"state": "test state",
											"zip_code": 10000,
											"address": "Test my address ",
											"twitter": "frfrfrfrfrf",
											"facebook": null,
											"linkedin": null,
											"instagram": null,
											"tiktok": null,
											"employer_name": "Test employer",
											"job_role": "CEO",
											"education": "No education",
											"other_education": "No test education"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/": {
			"get": {
				"tags": ["debt"],
				"description": "List all debts",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"debts": [
											{
												"id": 1,
												"amount": 300,
												"due_date": "2025-07-07",
												"user_id": 37
											},
											{
												"id": 2,
												"amount": 1000,
												"due_date": "2022-05-07",
												"user_id": 16
											},
											{
												"id": 7,
												"amount": 500,
												"due_date": "2022-05-07",
												"user_id": 16
											},
											{
												"id": 9,
												"amount": 1000,
												"due_date": "2030-05-05",
												"user_id": 37
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/hashtag/update/{id}": {
			"put": {
				"tags": ["hashtag"],
				"description": "Update hashtag",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Hashtag ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_2"
							},
							"examples": {
								"0": {
									"value": "{\n            \"hashtag_name\": \"#hashtagagain\",\n            \"user_id\": 1\n        }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"hashtag": {
											"id": 5,
											"hashtag_name": "#BBB",
											"user_id": 1
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/currency/list": {
			"get": {
				"tags": ["currency"],
				"description": "List all currencies",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"currencies": [
											{
												"id": 1,
												"symbol": "$",
												"name": "US Dollar"
											},
											{
												"id": 1,
												"symbol": "$",
												"name": "US Dollar"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/hashtag/list": {
			"get": {
				"tags": ["hashtag"],
				"description": "List all hashtags",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"hashtags": [
											{
												"id": 1,
												"hashtag_name": "#test",
												"user_id": 1
											},
											{
												"id": 5,
												"hashtag_name": "#hashtagagain",
												"user_id": 1
											},
											{
												"id": 6,
												"hashtag_name": "#testagain",
												"user_id": 1
											},
											{
												"id": 13,
												"hashtag_name": "#hashtagagain",
												"user_id": 2
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/userInformation/update": {
			"put": {
				"tags": ["user-information"],
				"description": "Update user informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_3"
							},
							"examples": {
								"0": {
									"value": "{\n    \"profile_url\": null,\n    \"bio\": \"Test my bio\",\n    \"date_of_birth\": \"2022-05-31\",\n    \"gender\": \"male\",\n    \"email\": \"email\",\n    \"phone_number\": \"+55555555555\",\n    \"country\": \"test country\",\n    \"city\": \"test city\",\n    \"state\": \"test state\",\n    \"zip_code\": 10000,\n    \"address\": \"Test my address \",\n    \"twitter\": \"frfrfrfrfrf\",\n    \"facebook\": null,\n    \"instagram\": null,\n    \"linkedin\": null,\n    \"tiktok\": null,\n    \"employer_name\": \"Test employer\",\n    \"job_role\": \"CEO\",\n    \"education\": \"No education\",\n    \"other_education\": \"No test education\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"userInformation": {
											"id": 29,
											"user_id": 71,
											"profile_url": null,
											"bio": "Test my bio",
											"date_of_birth": "2022-05-31",
											"gender": "male",
											"email": "email",
											"phone_number": "+55555555555",
											"country": "test country",
											"city": "test city",
											"state": "test state",
											"zip_code": 10000,
											"address": "Test my address ",
											"twitter": "frfrfrfrfrf",
											"facebook": "facebook",
											"instagram": null,
											"linkedin": null,
											"tiktok": null,
											"employer_name": "Test employer",
											"job_role": "CEO",
											"education": "No education",
											"other_education": "No test education"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/update/{id}": {
			"put": {
				"tags": ["debt"],
				"description": "Update debt by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_4"
							},
							"examples": {
								"0": {
									"value": "{\n\t\"amount\": \"500\",\n\t\"due_date\": \"2022-05-07\",\n\t\"user_id\": \"16\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"debt": {
											"id": 1,
											"amount": 300,
											"due_date": "2025-07-07",
											"user_id": 37
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/hashtag/{user_info_id}": {
			"get": {
				"tags": ["hashtag"],
				"description": "Get hashtag by user information id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "user_info_id",
						"in": "path",
						"description": "User information id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"hashtags": [
											{
												"id": 5,
												"hashtag_name": "#hashtagagain",
												"user_id": 1
											},
											{
												"id": 6,
												"hashtag_name": "#testagain",
												"user_id": 1
											},
											{
												"id": 14,
												"hashtag_name": "#hashtag_andii",
												"user_id": 1
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/currency/delete/{id}": {
			"delete": {
				"tags": ["currency"],
				"description": "Delete currency",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Currency ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"currency": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/hashtag/delete/{id}": {
			"delete": {
				"tags": ["hashtag"],
				"description": "Delete hashtag",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Hashtag ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"hashtag": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/dueDate/{id}": {
			"get": {
				"tags": ["debt"],
				"description": "Get due date for debt",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Debt ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"text/html; charset=utf-8": {
								"schema": {
									"type": "string",
									"example": {
										"data": {
											"dueDate": "2022-07-07"
										},
										"code": 200,
										"message": "OK"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/userInformation/delete/{id}": {
			"delete": {
				"tags": ["user-information"],
				"description": "Delete user infomations for user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "User information ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"userInformation": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/userInformation/{user_id}": {
			"get": {
				"tags": ["user-information"],
				"description": "Get user information by user id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "user_id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"userInformation": {
											"id": 9,
											"user_id": 71,
											"profile_url": null,
											"bio": "Test my bio",
											"date_of_birth": "2022-05-31",
											"gender": "male",
											"email": "email",
											"phone_number": "+55555555555",
											"country": "test country",
											"city": "test city",
											"state": "test state",
											"zip_code": 10000,
											"address": "Test my address ",
											"twitter": "frfrfrfrfrf",
											"facebook": null,
											"instagram": null,
											"linkedin": null,
											"tiktok": null,
											"employer_name": "Test employer",
											"job_role": "CEO",
											"education": "No education",
											"other_education": "No test education"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/debt/add": {
			"post": {
				"tags": ["debt"],
				"description": "Add new debt",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/debt_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n\t\"amount\": \"500\",\n\t\"due_date\": \"2022-05-07\",\n\t\"user_id\": \"17\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"debt": {
											"id": 9,
											"amount": "1000",
											"due_date": "2030-05-05T00:00:00.000Z",
											"user_id": 37
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/record/delete/{id}": {
			"delete": {
				"tags": ["record"],
				"description": "Delete a record",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Record ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"record": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/record/list": {
			"get": {
				"tags": ["record"],
				"description": "Get all records",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"records": [
											{
												"id": 19,
												"amount": 30,
												"type": "expense",
												"category_id": 1,
												"timestamp": "2022-05-27T10:13:10.000Z",
												"transaction_id": 6,
												"currency_id": 1,
												"account_id": 6
											},
											{
												"id": 25,
												"amount": 30,
												"type": "expense",
												"category_id": 1,
												"timestamp": "2022-05-27T10:21:49.000Z",
												"transaction_id": 6,
												"currency_id": 1,
												"account_id": 6
											},
											{
												"id": 26,
												"amount": 30,
												"type": "expense",
												"category_id": 1,
												"timestamp": "2022-05-27T10:24:05.000Z",
												"transaction_id": 6,
												"currency_id": 1,
												"account_id": 11
											},
											{
												"id": 30,
												"amount": 100,
												"type": "expense",
												"category_id": 1,
												"timestamp": "2022-06-03T13:04:23.000Z",
												"transaction_id": 6,
												"currency_id": 1,
												"account_id": 11
											},
											{
												"id": 33,
												"amount": 100,
												"type": "expense",
												"category_id": 1,
												"timestamp": "2022-06-09T12:42:40.000Z",
												"transaction_id": 6,
												"currency_id": 1,
												"account_id": 5
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/record/add": {
			"post": {
				"tags": ["record"],
				"description": "Add a record",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/record_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"amount\": 30,\n        \"type\": \"expense\",\n        \"category_id\": 1,\n        \"transaction_id\": 6,\n        \"currency_id\": 1,\n        \"account_id\": 6\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"record": {
											"id": 34,
											"amount": 100,
											"type": "expense",
											"category_id": 1,
											"timestamp": "2022-06-14T10:41:19.930Z",
											"transaction_id": 7,
											"currency_id": 1,
											"account_id": 2
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/record/update/{id}": {
			"put": {
				"tags": ["record"],
				"description": "Update a record",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_10_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"amount\": 100\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"record": {
											"id": 34,
											"amount": 244,
											"type": "expense",
											"category_id": 1,
											"timestamp": "2022-06-14T10:41:19.000Z",
											"transaction_id": 7,
											"currency_id": 1,
											"account_id": 2
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"tags": ["auth"],
				"description": "Log in a user",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/auth_login_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"email\": \"test\",\n    \"password\": \"password\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"user": [
											{
												"id": 37,
												"role_id": 1,
												"full_name": "ime",
												"email": "test",
												"password": "$2b$10$SIdb.mMUme3Dthq5KXoSc.L7wQSHihnv.mNfMCVkKGhVnpyXXHYgu",
												"default_currency_id": 1,
												"user_feature_id": null
											}
										],
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTMzODY5MzAsImlhdCI6MTY1MzM3OTczMC41MTgsImVtYWlsIjoidGVzdCIsInBhc3N3b3JkIjoiJDJiJDEwJFNJZGIubU1VbWUzRHRocTVLWG9TYy5MN3dRU0hpaG52Lm1OZk1DVmtLR2hWbnB5WFhIWWd1In0.GPcB2VFHRhA3ytXfT0seBjNC9aetP_k24QktNVm6vOI"
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"error": "404",
									"message": "Wrong username or password!"
								}
							}
						}
					}
				}
			}
		},
		"/auth/reset-password": {
			"put": {
				"tags": ["auth"],
				"description": "Reset a password",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"password": { "type": "string", "description": "Old Password" },
									"newPassword": { "type": "string", "description": "New Password" }
								}
							},
							"examples": { "0": { "newPassword": "654321", "password": "123456" } }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {},
									"code": 200,
									"message": "Password has been updated!"
								}
							}
						}
					}
				}
			}
		},
		"/transactionAccount/delete/{id}": {
			"delete": {
				"tags": ["transaction-account"],
				"description": "Delete a transaction account",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": " transaction account ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"transaction-account": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/transaction/user": {
			"get": {
				"tags": ["transaction"],
				"description": "List all transactions for user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transaction": [
											{
												"id": 1,
												"frequency": "never",
												"user_id": 16,
												"amount": 160,
												"account_id": 3,
												"category_id": 1,
												"status": "active"
											},
											{
												"id": 6,
												"frequency": "weekly",
												"user_id": 16,
												"amount": 160,
												"account_id": 2,
												"category_id": 1,
												"status": "inactive"
											},
											{
												"id": 7,
												"frequency": "weekly",
												"user_id": 17,
												"amount": 160,
												"account_id": 2,
												"category_id": 1,
												"status": "inactive"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionAccount/user": {
			"get": {
				"tags": ["transaction-account"],
				"description": "List all transaction accounts for user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"result": {
											"bank": [
												{
													"id": 108,
													"balance": 0,
													"account_type_id": 1,
													"name": "GFDFGHJss",
													"country": "",
													"bank_name": "",
													"card_owner": "Dsaf",
													"card_number": "2345 678",
													"card_expiration_date": "0000-00-00",
													"card_cvc": "333",
													"currency_id": 1,
													"user_id": 425,
													"status": "active"
												}
											],
											"card": [
												{
													"id": 109,
													"balance": 0,
													"account_type_id": 2,
													"name": "Namee",
													"country": "",
													"bank_name": "",
													"card_owner": "Name",
													"card_number": "5678 9033 2233 2221",
													"card_expiration_date": "0000-00-00",
													"card_cvc": "332",
													"currency_id": 1,
													"user_id": 425,
													"status": "active"
												}
											],
											"manual": [
												{
													"id": 110,
													"balance": 0,
													"account_type_id": 3,
													"name": "Ffff",
													"country": "",
													"bank_name": "",
													"card_owner": "Ewe",
													"card_number": "235",
													"card_expiration_date": "2020-01-01",
													"card_cvc": "323",
													"currency_id": 1,
													"user_id": 425,
													"status": "active"
												}
											],
											"mPesa": [
												{
													"id": 111,
													"balance": 0,
													"account_type_id": 4,
													"name": "D",
													"country": "",
													"bank_name": "",
													"card_owner": "D",
													"card_number": "d",
													"card_expiration_date": "0000-00-00",
													"card_cvc": "3",
													"currency_id": 1,
													"user_id": 425,
													"status": "active"
												}
											],
											"wallet": [
												{
													"id": 112,
													"balance": 0,
													"account_type_id": 5,
													"name": "Test",
													"country": "",
													"bank_name": "",
													"card_owner": "",
													"card_number": "",
													"card_expiration_date": "0000-00-00",
													"card_cvc": "",
													"currency_id": 1,
													"user_id": 425,
													"status": "active"
												}
											]
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionAccount/list": {
			"get": {
				"tags": ["transaction-account"],
				"description": "List all transaction accounts",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionAccount": [
											{
												"id": 4,
												"balance": 20.5,
												"account_type_id": 1,
												"name": "afas",
												"country": "afsasf",
												"bank_name": "afsfaasf",
												"card_owner": "Tagdgs",
												"card_number": "sgdg ",
												"card_expiration_date": "0000-00-00",
												"card_cvc": "Test cvc",
												"currency_id": 1,
												"user_id": 16,
												"status": "active"
											},
											{
												"id": 5,
												"balance": 20.5,
												"account_type_id": 1,
												"name": "afas",
												"country": "afsasf",
												"bank_name": "afsfaasf",
												"card_owner": "Tagdgs",
												"card_number": "sgdg ",
												"card_expiration_date": "0000-00-00",
												"card_cvc": "Test cvc",
												"currency_id": 1,
												"user_id": 16,
												"status": "active"
											},
											{
												"id": 6,
												"balance": 11.5,
												"account_type_id": 1,
												"name": "Test name",
												"country": "Croatia",
												"bank_name": "Test bank name",
												"card_owner": "Test owner",
												"card_number": "Test number",
												"card_expiration_date": "2025-11-10",
												"card_cvc": "Test cvc",
												"currency_id": 1,
												"user_id": 16,
												"status": "active"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionAccount/id/{id}": {
			"get": {
				"tags": ["transaction-account"],
				"description": "Get transaction account for id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction account ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionAccount": [
											{
												"id": 12,
												"balance": 10.5,
												"account_type_id": 1,
												"name": "Test neme",
												"country": "Croatia",
												"bank_name": "Test bank name",
												"card_owner": "Test owner",
												"card_number": "Test number",
												"card_expiration_date": "2025-03-05",
												"card_cvc": "Test cvc",
												"currency_id": 1,
												"user_id": 37,
												"status": "active"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/user/email/{email}": {
			"get": {
				"tags": ["user"],
				"description": "Get a user by email",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "email",
						"in": "path",
						"description": "User email",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"users": {
											"id": 37,
											"role_id": 1,
											"full_name": "ime prezime",
											"email": "test",
											"password": "$2b$10$Q9BzTt.cFMsuFlioq/BMYuTd5GQbCpJQU.9oAPag.JhCngu3Z7hgq",
											"default_currency_id": 1,
											"user_feature_id": null
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/transactionAccount/add/": {
			"post": {
				"tags": ["transaction-account"],
				"description": "Add new transaction account",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transactionAccount_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"id\": 7,\n        \"balance\": 10.5,\n        \"account_type_id\": 1,\n        \"name\": \"Test3\",\n        \"country\": null,\n        \"bank_name\": \"adf\",\n        \"card_owner\": \"sdfsd\",\n        \"card_number\": \"af\",\n        \"card_expiration_date\": \"0000-00-00\",\n        \"card_cvc\": \"dafgg\",\n        \"currency_id\": 1,\n        \"user_id\": 16,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionAccount": {
											"id": 12,
											"balance": 10.5,
											"account_type_id": 1,
											"name": "Test neme",
											"country": "Croatia",
											"bank_name": "Test bank name",
											"card_owner": "Test owner",
											"card_number": "Test number",
											"card_expiration_date": "2025-03-05T00:00:00.000Z",
											"card_cvc": "Test cvc",
											"currency_id": 1,
											"user_id": 37,
											"status": "active"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/auth/signup": {
			"post": {
				"tags": ["auth"],
				"description": "",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/auth_signup_body"
							},
							"examples": {
								"0": {
									"value": "{\n    \"full_name\": \"Ime Prezime\",\n    \"email\": \"test2\",\n    \"password\": \"password\"\n}"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"user": {
											"user_feature_id": null,
											"id": 199,
											"role_id": "1",
											"full_name": "Ime Prezime",
											"email": "lucijan@cinnnnn.com",
											"password": "$2b$10$zDEMooMlyk9uWGTMlaFrGOagCWBnSEP.Ok/DUO75mj7a1UwZ.IyCm",
											"default_currency_id": "1"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"examples": {
									"0": {
										"value": "{\n    \"message\": \"'body.password' with value 'vfvf' fails to match the required pattern: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/\",\n    \"field\": \"body.password\"\n} "
									},
									"1": {
										"value": "{\n    \"message\": \"'body.email' with value 'hdhdhdrr.od' fails to match the required pattern: /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+)\\\\.([a-zA-Z]{2,5})$/\",\n    \"field\": \"body.email\"\n}"
									},
									"2": {
										"value": "{\n    \"message\": \"'body.full_name' length must be at least 3 characters long\",\n    \"field\": \"body.full_name\"\n}  "
									}
								}
							}
						}
					}
				}
			}
		},

		"/transaction/list": {
			"get": {
				"tags": ["transaction"],
				"description": "List all transactions",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transaction": [
											{
												"id": 1,
												"frequency": "never",
												"user_id": 16,
												"amount": 160,
												"account_id": 3,
												"category_id": 1,
												"status": "active"
											},
											{
												"id": 6,
												"frequency": "weekly",
												"user_id": 16,
												"amount": 160,
												"account_id": 2,
												"category_id": 1,
												"status": "inactive"
											},
											{
												"id": 7,
												"frequency": "weekly",
												"user_id": 17,
												"amount": 160,
												"account_id": 2,
												"category_id": 1,
												"status": "inactive"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionCategory/": {
			"get": {
				"tags": ["transaction-category"],
				"description": "List all transaction categories",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionCategories": [
											{
												"id": 1,
												"name": "New updated name",
												"user_id": 16,
												"icon_url": "test icon url",
												"colour": "",
												"type": "income",
												"is_default": 1,
												"status": "active"
											},
											{
												"id": 3,
												"name": "TestName",
												"user_id": 17,
												"icon_url": "icon_url",
												"colour": "",
												"type": "expense",
												"is_default": 1,
												"status": "active"
											},
											{
												"id": 14,
												"name": "NewName",
												"user_id": 17,
												"icon_url": "icon_url",
												"colour": "",
												"type": "income",
												"is_default": 1,
												"status": "active"
											},
											{
												"id": 16,
												"name": "New updated name",
												"user_id": 16,
												"icon_url": "test icon url",
												"colour": "",
												"type": "income",
												"is_default": 1,
												"status": "active"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionCategory/user": {
			"get": {
				"tags": ["transaction-category"],
				"description": "List all transaction categories for signed user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionCategories": [
											{
												"id": 1,
												"name": "New updated name",
												"user_id": 16,
												"icon_url": "test icon url",
												"colour": "",
												"type": "income",
												"is_default": 1,
												"status": "active"
											},
											{
												"id": 3,
												"name": "TestName",
												"user_id": 17,
												"icon_url": "icon_url",
												"colour": "",
												"type": "expense",
												"is_default": 1,
												"status": "active"
											},
											{
												"id": 14,
												"name": "NewName",
												"user_id": 17,
												"icon_url": "icon_url",
												"colour": "",
												"type": "income",
												"is_default": 1,
												"status": "active"
											},
											{
												"id": 16,
												"name": "New updated name",
												"user_id": 16,
												"icon_url": "test icon url",
												"colour": "",
												"type": "income",
												"is_default": 1,
												"status": "active"
											}
										]
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionCategory/delete/{id}": {
			"delete": {
				"tags": ["transaction-category"],
				"description": "Delete a transaction category by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction category ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionCategory": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/user/delete/{id}": {
			"delete": {
				"tags": ["user"],
				"description": "Delete a user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"user": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/transaction/delete/{id}": {
			"delete": {
				"tags": ["transaction"],
				"description": "Delete a transaction",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transaction": 1
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/user/update": {
			"put": {
				"tags": ["user"],
				"description": "Update user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_5"
							},
							"examples": {
								"0": {
									"value": "{\n        \"full_name\": \"Ime Prezime\",\n        \"email\": \"mail\",\n        \"phone_number\": \"91234567\",\n        \"default_currency_id\": 1,\n        \"user_feature_id\": null\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"user": {
											"id": 37,
											"full_name": "Ime Prezime",
											"email": "mail",
											"password": "$2b$10$M4QdxV/.ReaW3P25HBO7wumg.DJAiVIo1QF2SAjeeeiR89aXen6Dy",
											"phone_number": "91234567",
											"default_currency_id": 1,
											"user_feature_id": null
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/user/my-info": {
			"get": {
				"tags": ["user"],
				"description": "Get all user related details",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "All user details",
						"content": {
							"application/json; charset=utf-8": {
								"example": {
									"data": {
										"user": {
											"id": 241,
											"role_id": 1,
											"full_name": "John Doe",
											"email": "john.doe@mail.com",
											"password": "",
											"default_currency_id": 1,
											"user_feature_id": null
										},
										"userInformation": {
											"id": 117,
											"user_id": 241,
											"profile_url": null,
											"bio": "Hello I am John Doe",
											"date_of_birth": "2022-05-31",
											"gender": "male",
											"email": "email",
											"phone_number": "+55555555555",
											"country": "USA",
											"city": "New York",
											"state": "NY",
											"zip_code": 10000,
											"address": "Test my address",
											"twitter": "john",
											"facebook": "john",
											"instagram": "john",
											"linkedin": null,
											"tiktok": null,
											"employer_name": "Test employer",
											"job_role": "iOS Developer",
											"education": "No education",
											"other_education": "No test education"
										},
										"warriorInformation": null,
										"mentorInformation": null,
										"hashtags": [
											{
												"id": 40,
												"hashtag_name": "#test",
												"user_id": 113
											}
										]
									},
									"message": "OK",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/user/{id}": {
			"get": {
				"tags": ["user"],
				"description": "Get Other User details",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Other user details",
						"content": {
							"application/json; charset=utf-8": {
								"example": {
									"data": {
										"id": 169,
										"role_id": 4,
										"full_name": "undefined",
										"email": "test1@test.com",
										"default_currency_id": 1,
										"user_feature_id": null,
										"hashtags": [
											{
												"id": 40,
												"hashtag_name": "#test",
												"user_id": 113
											}
										],
										"user_information": {
											"id": 1,
											"user_id": 169,
											"profile_url": null,
											"bio": "Test my bio",
											"date_of_birth": "2022-05-31",
											"gender": "other",
											"email": "test1@test.com",
											"phone_number": "+55555555555",
											"country": "test country",
											"city": "test city",
											"state": "test state",
											"zip_code": 10000,
											"address": "Test my address ",
											"twitter": null,
											"facebook": null,
											"instagram": null,
											"linkedin": null,
											"tiktok": null,
											"employer_name": "Test employer",
											"job_role": "CEO",
											"education": "No education",
											"other_education": "No test education"
										},
										"warrior_information": {
											"id": 1,
											"user_id": 169,
											"specialty": ["str"],
											"certification": ["long string"],
											"therapy_type": ["short"],
											"price_range": ["12"]
										},
										"mentor_information": {
											"id": 6,
											"user_id": 37,
											"isPassedIRT": true,
											"industry": ["str"],
											"role": ["string"],
											"frequency": ["string"],
											"languages": [],
											"conversation_mode": ["string"]
										},
										"friend_request": {
											"id": 58,
											"sender": {
												"id": 211,
												"full_name": "Jane Doe",
												"user_information": {
													"profile_url": "/uploads/user/profile_picture/211/images/1656600630118_avatar.png",
													"bio": "Hello world",
													"date_of_birth": "2022-05-31",
													"gender": "male",
													"country": "test country",
													"job_role": "CEO",
													"education": "No education"
												}
											},
											"receiver": {
												"id": 165,
												"full_name": "Jane Doe",
												"user_information": {
													"profile_url": "/uploads/user/profile_picture/211/images/1656600630118_avatar.png",
													"bio": "Hello world",
													"date_of_birth": "2022-05-31",
													"gender": "male",
													"country": "test country",
													"job_role": "CEO",
													"education": "No education"
												}
											},
											"sender_id": 211,
											"receiver_id": 165,
											"status": "send",
											"block_reason": null,
											"request_type": "friend"
										},
										"mentor_request": {
											"id": 1,
											"mentor_id": 165,
											"mentee_id": 169,
											"message": "This is a very short message, I guess!",
											"request_type": "mentor",
											"status": "send",
											"is_contract_signed_by_mentee": false,
											"is_contract_signed_by_mentor": false,
											"mentee": {
												"id": 169,
												"full_name": "undefined",
												"user_information": {
													"profile_url": null,
													"bio": "Test my bio",
													"date_of_birth": "2022-05-31",
													"gender": "other",
													"country": "test country",
													"job_role": "CEO",
													"education": "No education"
												}
											},
											"mentor": {
												"id": 165,
												"full_name": "undefined",
												"user_information": {
													"profile_url": "/uploads/user/profile_picture/165/images/1656346391232_WhatsApp_Image_2022-06-27_at_9.52.29_AM.jpeg",
													"bio": "params.bio",
													"date_of_birth": "0000-00-00",
													"gender": "",
													"country": "params.country",
													"job_role": "params.job_role",
													"education": "params.education"
												}
											}
										},
										"warrior_request": {
											"id": 1,
											"user_id": 37,
											"warrior_id": 169,
											"status": "approve",
											"request_type": "warrior",
											"user": {
												"id": 37,
												"full_name": "ime-prezime",
												"user_information": null
											},
											"warrior": {
												"id": 169,
												"full_name": "undefined",
												"user_information": {
													"profile_url": null,
													"bio": "Test my bio",
													"date_of_birth": "2022-05-31",
													"gender": "other",
													"country": "test country",
													"job_role": "CEO",
													"education": "No education"
												}
											}
										}
									},
									"message": "OK",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/transaction/update/{id}": {
			"put": {
				"tags": ["transaction"],
				"description": "Update transaction",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"frequency\": \"weekly\",\n        \"user_id\": 16,\n        \"account_id\": 3,\n        \"category_id\": 1,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transaction": {
											"id": 19,
											"frequency": "weekly",
											"user_id": 16,
											"account_id": 3,
											"category_id": 1,
											"status": "active"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/transactionAccount/update/{id}": {
			"put": {
				"tags": ["transaction-account"],
				"description": "Update transaction account",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction account ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_7_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"balance\": 11.5,\n        \"account_type_id\": 1,\n        \"name\": \"Test name\",\n        \"country\": \"Croatia\",\n        \"bank_name\": \"Test bank name\",\n        \"card_owner\": \"Test owner\",\n        \"card_number\": \"Test number\",\n        \"card_expiration_date\": \"2025-11-10\",\n        \"card_cvc\": \"Test cvc\",\n        \"currency_id\": 1,\n        \"user_id\": 16,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionAccount": {
											"id": 12,
											"balance": 11.5,
											"account_type_id": 1,
											"name": "Test name",
											"country": "Croatia",
											"bank_name": "Test bank name",
											"card_owner": "Test owner",
											"card_number": "Test number",
											"card_expiration_date": "2025-11-10",
											"card_cvc": "Test cvc",
											"currency_id": 1,
											"user_id": 16,
											"status": "active"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/transactionCategory/update/{id}": {
			"put": {
				"tags": ["transaction-category"],
				"description": "Update transaction category",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Transaction category ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/update_id_body_1"
							},
							"examples": {
								"0": {
									"value": "{\n        \"name\": \"New updated name\",\n        \"user_id\": 16,\n        \"icon_url\": \"test icon url\",\n        \"type\": \"income\",\n        \"is_default\": 1,\n        \"status\": \"active\"\n    }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"data": {
										"transactionCategories": {
											"id": 18,
											"name": "New updated name",
											"user_id": 16,
											"icon_url": "test icon url",
											"type": "income",
											"is_default": 1,
											"status": "active"
										},
										"code": 200,
										"message": "OK"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/transaction/add": {
			"post": {
				"tags": ["transaction"],
				"description": "Add a new transaction",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transaction_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n\n        \"frequency\": \"Weekly\",\n        \"user_id\": 16,\n        \"account_id\": 2,\n        \"category_id\": 1,\n        \"status\": \"Inactive,\"\n     \"amount\": \"160\"\n     }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transaction": {
											"id": 19,
											"frequency": "monthly",
											"user_id": 37,
											"amount": 160,
											"account_id": 3,
											"category_id": 1,
											"status": "active"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					}
				}
			}
		},
		"/transactionCategory/add": {
			"post": {
				"tags": ["transaction-category"],
				"description": "Add a new transaction category",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/transactionCategory_add_body"
							},
							"examples": {
								"0": {
									"value": "{\n        \"name\": \"TestName3\",\n        \"user_id\": \"16\",\n        \"icon_url\": \"icon_url\",\n        \"type\": \"Income\",\n        \"is_default\": \"1\",\n        \"status\": \"active\",\n    \"colour\": \"#FF0000\"\n     }"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "string"
								},
								"example": {
									"data": {
										"transactionCategory": {
											"id": 22,
											"name": "TestName3",
											"user_id": 16,
											"icon_url": "icon_url",
											"type": "Income",
											"is_default": 1,
											"status": "active",
											"colour": "#FF0000"
										}
									},
									"code": 200,
									"message": "OK"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object"
								},
								"example": {
									"message": "Unauthorized",
									"status": 401
								}
							}
						}
					}
				}
			}
		},
		"/mentor-information/": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get all mentors",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			}
		},
		"/mentor-information/{id}": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get mentor informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "User id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			},
			"post": {
				"tags": ["mentor-information"],
				"description": "Store mentor informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"isPassedIRT": false,
								"industry": ["str"],
								"role": ["string"],
								"conversation_mode": ["string"],
								"frequency": ["string"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			},
			"put": {
				"tags": ["mentor-information"],
				"description": "Get mentor informations",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json; charset=utf-8": {
							"schema": {
								"type": "object"
							},
							"example": {
								"isPassedIRT": false,
								"industry": ["str"],
								"role": ["string"],
								"conversation_mode": ["string"],
								"frequency": ["string"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully get mentor details",
						"schema": {
							"$ref": "#/components/schemas/MentorDetail"
						}
					}
				}
			}
		},
		"/languages": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get languages",
				"responses": {
					"200": {
						"description": "Successfully get languages",
						"schema": {
							"type": "object"
						},
						"exmaple": {
							"code": 200,
							"message": "OK",
							"data": {
								"industries": [
									{
										"key": "agriculture",
										"name": "Agriculture"
									}
								]
							}
						}
					}
				}
			}
		},
		"/industries": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get industries",
				"responses": {
					"200": {
						"description": "Successfully get industries",
						"schema": {
							"type": "object"
						},
						"exmaple": {
							"code": 200,
							"message": "OK",
							"data": {
								"industries": [
									{
										"key": "agriculture",
										"name": "Agriculture"
									}
								]
							}
						}
					}
				}
			}
		},
		"/modes": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get modes",
				"responses": {
					"200": {
						"description": "Successfully get modes",
						"schema": {
							"type": "object"
						},
						"exmaple": {
							"code": 200,
							"message": "OK",
							"data": {
								"modes": [
									{
										"key": "agriculture",
										"name": "Agriculture"
									}
								]
							}
						}
					}
				}
			}
		},
		"/frequencies": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get frequencies",
				"responses": {
					"200": {
						"description": "Successfully get frequencies",
						"schema": {
							"type": "object"
						},
						"exmaple": {
							"code": 200,
							"message": "OK",
							"data": {
								"frequencies": [
									{
										"key": "agriculture",
										"name": "Agriculture"
									}
								]
							}
						}
					}
				}
			}
		},
		"/roles": {
			"get": {
				"tags": ["mentor-information"],
				"description": "Get roles",
				"responses": {
					"200": {
						"description": "Successfully get roles",
						"schema": {
							"type": "object"
						},
						"exmaple": {
							"code": 200,
							"message": "OK",
							"data": {
								"roles": [
									{
										"key": "agriculture",
										"name": "Agriculture"
									}
								]
							}
						}
					}
				}
			}
		},
		"/mentor-matcher/my-mentor": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get logged in user's mentor",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentors",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/my-mentee": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get logged in user's mentee",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/mentors": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Search mentors",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "Mentor name",
						"required": false,
						"type": "string"
					},
					{
						"name": "industry",
						"in": "query",
						"description": "Industry(comma separated value with no spaces, e.g. IT,Software)",
						"required": false
					},
					{
						"name": "role",
						"in": "query",
						"description": "Role(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					},
					{
						"name": "frequency",
						"in": "query",
						"description": "Frequency(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					},
					{
						"name": "conversation_mode",
						"in": "query",
						"description": "Conversation Mode(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "languages(comma separated value with no spaces, e.g IT,Software)",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successfully get mentors"
					}
				}
			}
		},
		"/mentor-matcher/request/send": {
			"post": {
				"tags": ["mentor-matcher"],
				"description": "Send mentor requests",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CreateMentorRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/mentor/favorite/add": {
			"post": {
				"tags": ["mentor-matcher"],
				"description": "Add a Mentor favorite",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/FavoriteOrUnfavoriteMentor"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/mentor/favorite/remove": {
			"post": {
				"tags": ["mentor-matcher"],
				"description": "Remove a Mentor from the favorite list",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/FavoriteOrUnfavoriteMentor"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/request/accept": {
			"put": {
				"tags": ["mentor-matcher"],
				"description": "Accept mentor request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/AcceptOrRejectMentorRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/request/reject": {
			"put": {
				"tags": ["mentor-matcher"],
				"description": "Reject mentor request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/AcceptOrRejectMentorRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/sign-contract": {
			"put": {
				"tags": ["mentor-matcher"],
				"description": "Sign mentor contract.",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/MentorContract"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/mentor-matcher/request/mentee": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get sent mentors requests [for metee users]",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/request/mentor": {
			"get": {
				"tags": ["mentor-matcher"],
				"description": "Get mentors requests [for mentor users]",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/components/schemas/Mentor"
						}
					}
				}
			}
		},
		"/mentor-matcher/": {
			"delete": {
				"tags": ["mentor-matcher"],
				"description": "Remove Mentor/User",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"request_id": { "type": "integer" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User/Mentor removed from your list",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"code": { "type": "integer" },
										"message": { "type": "string" },
										"data": {
											"type": "object"
										}
									}
								},
								"exmaple": {
									"code": 200,
									"message": "User/Mentor removed from your list",
									"data": {}
								}
							}
						}
					}
				}
			}
		},
		"/find-friend/search": {
			"get": {
				"tags": ["find-friend"],
				"description": "Search friends using name",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Friend name",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/components/schemas/SearchFindFriend"
						}
					}
				}
			}
		},
		"/find-friend/request/send": {
			"post": {
				"tags": ["find-friend"],
				"description": "Send a request to a friend",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendFriendRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Friend request sent"
					}
				}
			}
		},
		"/find-friend/friend-requests": {
			"get": {
				"tags": ["find-friend"],
				"description": "Get all sent friend requests",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Get all sent friend requests",
						"schema": {
							"$ref": "#/components/schemas/Friends"
						}
					}
				}
			}
		},
		"/find-friend/received-friend-requests": {
			"get": {
				"tags": ["find-friend"],
				"description": "Get all received friend requests",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Get all sent friend requests",
						"schema": {
							"$ref": "#/components/schemas/Friends"
						}
					}
				}
			}
		},
		"/find-friend/request/accept": {
			"put": {
				"tags": ["find-friend"],
				"description": "Accept a friend request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptRejectFriendRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Friend request accepted"
					}
				}
			}
		},
		"/find-friend/request/reject": {
			"put": {
				"tags": ["find-friend"],
				"description": "Reject a friend request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptRejectFriendRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Friend request rejected"
					}
				}
			}
		},
		"/find-friend/unfriend": {
			"delete": {
				"tags": ["find-friend"],
				"description": "Unfriend user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"request_id": { "type": "integer" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Removed user from friend list",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"code": { "type": "integer" },
										"message": { "type": "string" },
										"data": {
											"type": "object"
										}
									}
								},
								"exmaple": {
									"code": 200,
									"message": "Removed user from your friend list.",
									"data": {}
								}
							}
						}
					}
				}
			}
		},
		"/find-friend/friends": {
			"get": {
				"tags": ["find-friend"],
				"description": "Get all friends",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Get all friends",
						"schema": {
							"$ref": "#/components/schemas/Friends"
						}
					}
				}
			}
		},
		"/find-friend/request/{id}": {
			"get": {
				"tags": ["find-friend"],
				"description": "See a friend request",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Request ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Friend request get successfully"
					}
				}
			}
		},
		"/find-friend/block": {
			"post": {
				"tags": ["find-friend"],
				"description": "Block a friend",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BlockUnblockFriend"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Friend blocked"
					}
				}
			}
		},
		"/find-friend/unblock": {
			"post": {
				"tags": ["find-friend"],
				"description": "Unblock a friend",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BlockUnblockFriend"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Friend unblocked"
					}
				}
			}
		},
		"/find-friend/blocked-users": {
			"get": {
				"tags": ["find-friend"],
				"description": "Get all blocked users",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Get all blocked users",
						"schema": {
							"$ref": "#/components/schemas/Friends"
						}
					}
				}
			}
		},
		"/find-friend/friends/{id}": {
			"get": {
				"tags": ["find-friend"],
				"description": "Get a friend",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "user_id",
						"in": "path",
						"description": "User ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a friend",
						"schema": {
							"$ref": "#/components/schemas/Friend"
						}
					}
				}
			}
		},
		"/upload/avatar": {
			"post": {
				"tags": ["uploads"],
				"description": "Upload user profile picture",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"avatar": { "type": "string", "format": "binary" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Upload profile picture response",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"code": { "type": "integer" },
										"message": { "type": "string" },
										"data": {
											"type": "object",
											"properties": {
												"userInformation": { "type": "object", "$ref": "#/components/schemas/UserInformation" }
											}
										}
									}
								},
								"exmaple": {
									"code": 200,
									"message": "OK",
									"data": {
										"userInformation": {
											"profile_url": "uploads/user/profile_picture/259/images/RENAME.jpg"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/upload/file": {
			"get": {
				"tags": ["uploads"],
				"description": "Get uploaded file/image",
				"parameters": [
					{
						"name": "path",
						"in": "query",
						"description": "File path/URL",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/room": {
			"post": {
				"tags": ["chat"],
				"description": "Create a room",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{ "$ref": "#/components/schemas/create_room_body1" },
									{ "$ref": "#/components/schemas/create_room_body2" }
								]
							},
							"example": {
								"name": "room1",
								"user_ids": ["1", "2", "3"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": { "room": { "type": "object", "$ref": "#/components/schemas/room" } }
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"room": {
											"id": 22,
											"user_ids": ["16"],
											"name": "room1",
											"created_at": "1990-07-07T00:00:00.000Z"
										}
									},
									"code": 200,
									"message": "Room created successfully"
								}
							}
						}
					}
				}
			}
		},
		"/room/all": {
			"get": {
				"tags": ["chat"],
				"description": "Get all room details",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"rooms": { "type": "array", "items": { "type": "object", "$ref": "#/components/schemas/room" } }
											}
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"room": [
											{
												"id": 22,
												"user_ids": ["16", "17"],
												"name": "room1",
												"created_at": "1990-07-07T00:00:00.000Z"
											},
											{
												"id": 23,
												"user_ids": ["17", "18"],
												"name": "room2",
												"created_at": "1990-07-07T00:00:00.000Z"
											}
										]
									},
									"code": 200,
									"message": "Successfully fetched all rooms"
								}
							}
						}
					}
				}
			}
		},
		"/room/{id}": {
			"get": {
				"tags": ["chat"],
				"description": "Get room details by id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "room_id",
						"in": "path",
						"description": "Room ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": { "room": { "type": "object", "$ref": "#/components/schemas/room" } }
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"room": {
											"id": 22,
											"user_ids": ["16"],
											"name": "room1",
											"created_at": "1990-07-07T00:00:00.000Z"
										}
									},
									"code": 200,
									"message": "Successfully fetched room"
								}
							}
						}
					}
				}
			}
		},
		"/room/join/{id}": {
			"put": {
				"tags": ["chat"],
				"description": "Join a room",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "room_id",
						"in": "path",
						"description": "Room ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": { "room": { "type": "object", "$ref": "#/components/schemas/room" } }
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"room": {
											"id": 22,
											"user_ids": ["16"],
											"name": "room1",
											"created_at": "1990-07-07T00:00:00.000Z"
										}
									},
									"code": 200,
									"message": "Room joined successfully"
								}
							}
						}
					}
				}
			}
		},
		"/message/all": {
			"get": {
				"tags": ["chat"],
				"description": "Get all messages by user id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"messages": {
													"type": "array",
													"items": { "properties": "object", "$ref": "#/components/schemas/Message" }
												}
											}
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"messages": [
											{
												"id": 11,
												"user_id": 259,
												"body": "Hey",
												"room_id": 1,
												"created_at": "2022-07-12T15:27:29.000Z",
												"user": {
													"id": 259,
													"full_name": "Ime Prezime",
													"user_information": null
												}
											}
										]
									},
									"message": "OK",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/message/unread": {
			"get": {
				"tags": ["chat"],
				"description": "Get all unread messages of a user",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"unreadMessages": {
													"type": "array",
													"items": { "properties": "object", "$ref": "#/components/schemas/Message" }
												}
											}
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"unreadMessages": [
											{
												"id": 11,
												"user_id": 259,
												"body": "Hey",
												"room_id": 1,
												"created_at": "2022-07-12T15:27:29.000Z",
												"user": {
													"id": 259,
													"full_name": "Ime Prezime",
													"user_information": null
												}
											}
										]
									},
									"message": "OK",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/message/unread/count": {
			"get": {
				"tags": ["chat"],
				"description": "Get a count of unread messages by user id",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"unreadMessageCount": {
													"type": "integer"
												}
											}
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"unreadMessageCount": 3
									},
									"message": "OK",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/message/subscribe": {
			"get": {
				"tags": ["chat"],
				"description": "Subscribe to receive notification of new incoming messages",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"messages": {
													"type": "array",
													"items": { "properties": "object", "$ref": "#/components/schemas/Message" }
												}
											}
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"messages": [
											{
												"id": 11,
												"user_id": 259,
												"body": "Hey",
												"room_id": 1,
												"created_at": "2022-07-12T15:27:29.000Z",
												"user": {
													"id": 259,
													"full_name": "Ime Prezime",
													"user_information": null
												}
											}
										]
									},
									"message": "OK",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/message/send/room/{id}": {
			"post": {
				"tags": ["chat"],
				"description": "Send a message",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Room ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/send_message_body"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": { "message": { "type": "object", "$ref": "#/components/schemas/Message" } }
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"message": {
											"id": 11,
											"user_id": 259,
											"body": "Hey",
											"room_id": 1,
											"created_at": "2022-07-12T15:27:29.000Z",
											"user": {
												"id": 259,
												"full_name": "Ime Prezime",
												"user_information": null
											}
										}
									},
									"message": "Message sent successfully",
									"code": 200
								}
							}
						}
					}
				}
			}
		},
		"/message/room/{id}": {
			"get": {
				"tags": ["chat"],
				"description": "Get messages",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Room ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					{
						"name": "from",
						"in": "query",
						"description": "From Date",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": { "messages": { "type": "array", "$ref": "#/components/schemas/Message" } }
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"message": [
											{
												"id": 11,
												"user_id": 259,
												"body": "Hey",
												"room_id": 1,
												"created_at": "2022-07-12T15:27:29.000Z",
												"user": {
													"id": 259,
													"full_name": "Ime Prezime",
													"user_information": null
												}
											}
										]
									},
									"code": 200,
									"message": "Messages fetched successfully"
								}
							}
						}
					}
				}
			}
		},
		"/message/room/subscribe/{id}": {
			"get": {
				"tags": ["chat"],
				"description": "Subscribe to room to send and get messages",
				"parameters": [
					{
						"name": "auth-token",
						"in": "header",
						"description": "Auth Token",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Room ID",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": { "messages": { "type": "object", "$ref": "#/components/schemas/Message" } }
										},
										"message": { "type": "string" },
										"code": { "type": "integer" }
									}
								},
								"example": {
									"data": {
										"message": {
											"id": 11,
											"user_id": 259,
											"body": "Hey",
											"room_id": 1,
											"created_at": "2022-07-12T15:27:29.000Z",
											"user": {
												"id": 259,
												"full_name": "Ime Prezime",
												"user_information": null
											}
										}
									},
									"code": 200,
									"message": "Received a message!"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"loanLedgerPersonalInformation_add_body": {
				"type": "object",
				"properties": {
					"national_id": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"full_name": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"date_of_birth": {
						"type": "string"
					},
					"registration_number": {
						"type": "string"
					},
					"mobile_phone": {
						"type": "string"
					},
					"current_residence": {
						"type": "string"
					},
					"house_number": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"record_add_body": {
				"type": "object",
				"properties": {
					"transaction_id": {
						"type": "integer"
					},
					"amount": {
						"type": "integer"
					},
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"type": {
						"type": "string"
					},
					"currency_id": {
						"type": "integer"
					}
				}
			},
			"update_10_body": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "integer"
					}
				}
			},
			"auth_login_body": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"transactionAccount_add_body": {
				"type": "object",
				"properties": {
					"country": {},
					"card_number": {
						"type": "string"
					},
					"card_expiration_date": {
						"type": "string"
					},
					"card_cvc": {
						"type": "string"
					},
					"account_type_id": {
						"type": "integer"
					},
					"balance": {
						"type": "number"
					},
					"user_id": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					},
					"bank_name": {
						"type": "string"
					},
					"id": {
						"type": "integer"
					},
					"card_owner": {
						"type": "string"
					},
					"currency_id": {
						"type": "integer"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"auth_signup_body": {
				"type": "object",
				"properties": {
					"full_name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"loanLedgerProfessionalInformation_add_body": {
				"type": "object",
				"properties": {
					"profession": {
						"type": "string"
					},
					"employment_type": {
						"type": "string"
					},
					"education": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"company_name": {
						"type": "string"
					},
					"net_monthly_salary": {
						"type": "number"
					},
					"work_experience": {
						"type": "string"
					}
				}
			},
			"update_id_body_7": {
				"type": "object",
				"properties": {
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"user_id": {
						"type": "integer"
					},
					"frequency": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"update_id_body_1": {
				"type": "object",
				"properties": {
					"icon_url": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"is_default": {
						"type": "integer"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"transaction_add_body": {
				"type": "object",
				"properties": {
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"user_id": {
						"type": "integer"
					},
					"frequency": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"transactionCategory_add_body": {
				"type": "object",
				"properties": {
					"icon_url": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"is_default": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"hashtag_add_body": {
				"type": "object",
				"properties": {
					"user_id": {
						"type": "integer"
					},
					"hashtag_name": {
						"type": "string"
					}
				}
			},
			"userInformation_add_body": {
				"type": "object",
				"properties": {
					"country": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"job_role": {
						"type": "string"
					},
					"education": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"profile_url": {},
					"city": {
						"type": "string"
					},
					"date_of_birth": {
						"type": "string"
					},
					"facebook": {},
					"bio": {
						"type": "string"
					},
					"employer_name": {
						"type": "string"
					},
					"instagram": {},
					"linkedin": {},
					"zip_code": {
						"type": "integer"
					},
					"other_education": {
						"type": "string"
					},
					"twitter": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"tiktok": {},
					"phone_number": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"update_7_body": {
				"type": "object",
				"properties": {
					"country": {
						"type": "string"
					},
					"balance": {
						"type": "number"
					},
					"card_number": {
						"type": "string"
					},
					"card_expiration_date": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"card_cvc": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"bank_name": {
						"type": "string"
					},
					"account_type_id": {
						"type": "integer"
					},
					"card_owner": {
						"type": "string"
					},
					"currency_id": {
						"type": "integer"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"update_id_body_2": {
				"type": "object",
				"properties": {
					"user_id": {
						"type": "integer"
					},
					"hashtag_name": {
						"type": "string"
					}
				}
			},
			"update_id_body_3": {
				"type": "object",
				"properties": {
					"country": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"job_role": {
						"type": "string"
					},
					"education": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"profile_url": {},
					"city": {
						"type": "string"
					},
					"date_of_birth": {
						"type": "string"
					},
					"facebook": {},
					"bio": {
						"type": "string"
					},
					"employer_name": {
						"type": "string"
					},
					"instagram": {},
					"linkedin": {},
					"zip_code": {
						"type": "integer"
					},
					"other_education": {
						"type": "string"
					},
					"twitter": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"tiktok": {},
					"phone_number": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				}
			},
			"update_id_body_4": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"due_date": {
						"type": "string"
					}
				}
			},
			"debt_add_body": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"due_date": {
						"type": "string"
					}
				}
			},
			"update_id_body_5": {
				"type": "object",
				"properties": {
					"default_currency_id": {
						"type": "integer"
					},
					"firstname": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role_id": {
						"type": "integer"
					},
					"phone_number": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					}
				}
			},
			"update_id_body_6": {
				"type": "object",
				"properties": {
					"user_id": {
						"type": "integer"
					},
					"full_name": {
						"type": "string"
					},
					"national_id": {
						"type": "string"
					},
					"date_of_birth": {
						"type": "string"
					},
					"registration_number": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"mobile_phone": {
						"type": "string"
					},
					"current_residence": {
						"type": "string"
					},
					"house_number": {
						"type": "string"
					},
					"country": {
						"type": "string"
					}
				}
			},
			"update_id_body": {
				"type": "object",
				"properties": {
					"frequency": {
						"type": "string"
					},
					"user_id": {
						"type": "integer"
					},
					"account_id": {
						"type": "integer"
					},
					"category_id": {
						"type": "integer"
					},
					"status": {
						"type": "string"
					}
				}
			},
			"send_message_body": {
				"type": "object",
				"properties": {
					"message": { "type": "string" }
				}
			},
			"room": {
				"type": "object",
				"properties": {
					"id": { "type": "integer" },
					"user_ids": { "type": "array", "items": { "type": "string" } },
					"name": { "type": "string" },
					"created_at": { "type": "string" }
				}
			},
			"create_room_body1": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"user_ids": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"CreateOrUpdateMentorInformation": {
				"required": ["isPassedIRT", "industry", "role", "conversation_mode", "frequency"],
				"properties": {
					"isPassedIRT": {
						"type": "boolean"
					},
					"industry": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"role": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"conversation_mode": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"frequency": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"UserInformation": {
				"type": "object",
				"properties": {
					"profile_url": { "type": "string" },
					"bio": { "type": "string" },
					"date_of_birth": { "type": "string" },
					"gender": { "type": "string" },
					"country": { "type": "string" },
					"job_role": { "type": "string" },
					"education": { "type": "string" }
				}
			},
			"MentorInformation": {
				"type": "object",
				"properties": {
					"industry": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"role": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"frequency": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"conversation_mode": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"isPassedIRT": {
						"type": "boolean"
					}
				}
			},
			"Mentor": {
				"type": "object",
				"description": "Object schema",
				"properties": {
					"id": {
						"type": "integer"
					},
					"mentor_id": {
						"type": "integer"
					},
					"mentee_id": {
						"type": "integer"
					},
					"request_type": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"is_contract_signed_by_mentee": {
						"type": "boolean"
					},
					"is_contract_signed_by_mentor": {
						"type": "boolean"
					},
					"mentee": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer"
							},
							"full_name": {
								"type": "string"
							},
							"user_information": {
								"$ref": "#/components/schemas/UserInformation"
							}
						}
					},
					"mentor": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer"
							},
							"full_name": {
								"type": "string"
							},
							"user_information": {
								"$ref": "#/components/schemas/UserInformation"
							},
							"mentor_information": {
								"$ref": "#/components/schemas/MentorInformation"
							}
						}
					}
				}
			},
			"MentorDetail": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer"
					},
					"user_information": {
						"$ref": "#/components/schemas/UserInformation"
					},
					"mentor_information": {
						"$ref": "#/components/schemas/MentorInformation"
					}
				}
			},
			"SearchMentor": {
				"type": "array",
				"description": "Object schema",
				"items": {
					"type": "object",
					"properties": {
						"type": "object",
						"properties": {
							"id": {
								"type": "integer"
							},
							"full_name": "string"
						}
					}
				}
			},
			"CreateMentorRequest": {
				"required": ["mentor_id", "message"],
				"properties": {
					"mentor_id": {
						"type": "integer"
					},
					"message": {
						"type": "string"
					}
				}
			},
			"AcceptOrRejectMentorRequest": {
				"required": ["request_id"],
				"properties": {
					"request_id": {
						"type": "integer"
					}
				}
			},
			"FavoriteOrUnfavoriteMentor": {
				"required": ["mentor_id"],
				"properties": {
					"mentor_id": {
						"type": "integer"
					}
				}
			},
			"MentorContract": {
				"required": ["request_id"],
				"properties": {
					"request_id": {
						"type": "integer"
					}
				}
			},
			"create_room_body2": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"Message": {
				"type": "object",
				"properties": {
					"id": { "type": "integer" },
					"user_id": { "type": "integer" },
					"body": { "type": "string" },
					"read": { "type": "boolean" },
					"room_id": { "type": "integer" },
					"created_at": { "type": "string", "format": "date" }
				}
			}
		}
	}
}
